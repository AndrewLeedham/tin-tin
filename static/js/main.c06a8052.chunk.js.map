{"version":3,"sources":["Session/Playing.module.css","theme/index.js","useUser.js","components/Header.js","components/Page.js","components/Clearfix.js","Session/Submitting.js","Session/Waiting.js","components/Timer.js","useLocalStorageState.js","Session/Playing.js","useTimer.js","components/Error.js","useAsyncError.js","events.js","Session/index.js","components/TextSeperator.js","CreateSession.js","components/ErrorBoundary.js","App.js","serviceWorker.js","useServiceWorker.js","index.js","firebase.js"],"names":["module","exports","customTheme","theme","colors","brand","50","100","200","300","400","500","600","700","800","900","USERSTATE","getUserFromSession","sessionId","raw","window","localStorage","getItem","user","JSON","parse","e","console","warn","createUser","admin","state","names","undefined","setItem","stringify","useUser","useState","setUser","updateUser","Header","heading","Stack","align","marginBottom","Image","size","src","process","Heading","Page","header","subHeading","children","showLeave","Box","position","my","maxW","mx","px","as","mb","Text","fontSize","IconButton","Link","to","aria-label","icon","FiLogOut","variant","variantColor","mt","Clearfix","style","content","display","clear","Submitting","count","onSubmit","Array","fill","setNames","event","preventDefault","map","name","index","FormControl","key","isRequired","FormLabel","htmlFor","Input","id","value","onChange","newNames","updateName","target","minLength","maxLength","Button","type","rightIcon","MdSend","float","MdSkipNext","onClick","Waiting","startTurn","round","noNames","timer","lock","Math","floor","minutes","setMinutes","seconds","setSeconds","secondsDiv","useRef","minutesDiv","isInline","spacing","NumberInput","min","max","isInvalid","ref","minutesInput","current","secondsInput","setCustomValidity","reportValidity","justify","FiClock","FiPlay","isDisabled","pad","number","str","toString","length","Timer","time","reset","toggle","isPaused","props","hidden","setHidden","Flex","rounded","borderWidth","borderColor","alignItems","FiEye","FiEyeOff","fontVariantNumeric","opacity","FiPause","FiRepeat","useLocalStorageState","defaultValue","fromLocal","setState","setLocalStorageState","newState","cleanupLocalStorageState","removeItem","Playing","initialNames","endTurn","cleanupNames","currentTile","setCurrentTile","cleanupCurrentTile","passed","setPassed","cleanupPassed","isOpen","setIsOpen","cleanupIsOpen","isCancelable","setIsCancelable","cleanupIsCancelable","start","onTimerEnd","setIsPaused","setTime","cleanupStorage","Date","now","last","setLast","out","Audio","loop","alarm","alarmPlaying","setAlarmPlaying","useEffect","setInterval","play","clearInterval","pause","useTimer","resetTimer","cleanupTimer","stopAlarm","closeAlert","cancelRef","React","answered","outOf","onSwipe","swipeDirection","answeredPassed","direction","LEFT","RIGHT","renderButtons","left","right","flex","justifyContent","p","FiDownload","FiUpload","flexGrow","FiCheck","py","textAlign","className","noselect","color","initialTime","AlertDialog","leastDestructiveRef","onClose","closeOnOverlayClick","closeOnEsc","fontWeight","paddingBottom","flexDirection","paddingX","paddingY","slice","Checkbox","isChecked","checked","isFullWidth","reduce","total","Number","ml","Error","title","error","Alert","status","height","mr","maxWidth","useAsyncError","setError","useCallback","trackEvent","data","a","firebase","database","push","timestamp","addNames","session","throwError","previous","carbon","Object","values","set","then","catch","shuffle","i","j","random","once","sessionRef","val","before","after","filter","n","Session","useParams","useObject","sessionLoading","sessionError","sessionExists","isOnline","useOnlineStatus","Spinner","transform","renderScreen","TextSeperator","text","Divider","top","backgroundColor","CreateSession","setSession","username","setUsername","password","setPassword","useAuthState","auth","loading","authError","setAuthError","setCount","setKey","customID","setCustomID","history","useHistory","renderJoin","encodeURIComponent","InputGroup","borderTopRightRadius","borderBottomRightRadius","borderRight","FiUserPlus","Promise","resolve","useCustom","signOut","FiPlus","marginY","signInWithEmailAndPassword","FiLogIn","ErrorBoundary","this","Component","App","isUpdateAvailable","updateAssets","ThemeProvider","REACT_APP_VERSION","CSSReset","path","component","bottom","FiRefreshCw","isLocalhost","Boolean","location","hostname","match","register","config","navigator","URL","href","origin","addEventListener","swUrl","fetch","headers","response","contentType","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","log","checkValidServiceWorker","waiting","onWaiting","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ServiceWorkerContext","createContext","ServiceWorkerProvider","waitingServiceWorker","setWaitingServiceWorker","setUpdateAvailable","useMemo","postMessage","Provider","Root","useContext","err","ReactDOM","render","document","getElementById","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId"],"mappings":"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","file":"static/js/main.c06a8052.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"noselect\":\"Playing_noselect__28UVJ\"};","import { theme } from \"@chakra-ui/core\";\n\nexport const customTheme = {\n  ...theme,\n  colors: {\n    ...theme.colors,\n    // Go to https://smart-swatch.netlify.com/ to easily generate a new color\n    // palette.\n    brand: {\n      50: \"#ffe2e7\",\n      100: \"#ffb3bb\",\n      200: \"#fc8393\",\n      300: \"#f9526d\",\n      400: \"#f6224b\",\n      500: \"#dd0939\",\n      600: \"#ad0320\",\n      700: \"#7c000e\",\n      800: \"#4d0002\",\n      900: \"#200400\",\n    },\n  },\n};\n","import { useState } from \"react\";\n\nexport const USERSTATE = {\n  SUBMITTING: 0,\n  PLAYING: 1,\n  WAITING: 2,\n};\n\nfunction getUserFromSession(sessionId) {\n  const raw = window.localStorage.getItem(\"user\");\n  if (raw) {\n    try {\n      const user = JSON.parse(raw);\n      if (sessionId && user.sessionId !== sessionId) {\n        return undefined;\n      }\n      return user;\n    } catch (e) {\n      console.warn(\"Could not read user from local session: \", e);\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nfunction createUser(sessionId, admin = false) {\n  const user = {\n    sessionId,\n    admin,\n    state: USERSTATE.SUBMITTING,\n    names: undefined,\n  };\n\n  window.localStorage.setItem(\"user\", JSON.stringify(user));\n\n  return user;\n}\n\nexport default function useUser(sessionId = null) {\n  const [user, setUser] = useState(\n    () =>\n      (sessionId && getUserFromSession(sessionId)) ||\n      createUser(sessionId, !sessionId)\n  );\n\n  function updateUser(user) {\n    window.localStorage.setItem(\"user\", JSON.stringify(user));\n    setUser(user);\n  }\n\n  return [user, updateUser];\n}\n","import React from \"react\";\nimport { Stack, Heading, Image } from \"@chakra-ui/core\";\n\nexport default function Header({ heading = \"Tin-tin\" }) {\n  return (\n    <Stack align=\"center\" marginBottom={10}>\n      <Image size=\"150px\" src={`${process.env.PUBLIC_URL}/logo512.png`} />\n      <Heading>{heading}</Heading>\n    </Stack>\n  );\n}\n","import React from \"react\";\nimport { Heading, Text, Box, IconButton } from \"@chakra-ui/core\";\nimport Header from \"./Header\";\nimport { FiLogOut } from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Page({\n  header,\n  heading,\n  subHeading,\n  children,\n  showLeave,\n}) {\n  return (\n    <Box position=\"relative\" my=\"10\" maxW=\"md\" mx=\"auto\" px=\"4\">\n      {header && <Header heading={heading} />}\n      {heading && !header && (\n        <Heading as=\"h1\" mb={2}>\n          {heading}\n        </Heading>\n      )}\n      {subHeading && (\n        <Text fontSize=\"xl\" mb={5}>\n          {subHeading}\n        </Text>\n      )}\n      {children}\n\n      {showLeave && (\n        <IconButton\n          as={Link}\n          to=\"/\"\n          aria-label={\"Leave session\"}\n          icon={FiLogOut}\n          variant=\"outline\"\n          variantColor={\"red\"}\n          mt={10}\n        />\n      )}\n    </Box>\n  );\n}\n","import React from \"react\";\n\nexport default function Clearfix({ children }) {\n  return (\n    <div style={{ content: \"\", display: \"table\", clear: \"both\" }}>\n      {children}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, FormControl, FormLabel, Input } from \"@chakra-ui/core\";\nimport Page from \"../components/Page\";\nimport { MdSend, MdSkipNext } from \"react-icons/md\";\nimport Clearfix from \"../components/Clearfix\";\n\nexport default function Submitting({ count, onSubmit }) {\n  const [names, setNames] = useState(new Array(count).fill(\"\"));\n\n  function updateName(index, name) {\n    const newNames = [...names];\n    newNames[index] = name;\n    setNames(newNames);\n  }\n  return (\n    <Page\n      heading=\"Submit your names\"\n      subHeading={`Enter the ${count} names you want to put in the tin, then press \"Submit names\".`}\n      showLeave\n    >\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          onSubmit(names);\n        }}\n      >\n        {names.map((name, index) => (\n          <FormControl key={index} isRequired mb={4}>\n            <FormLabel htmlFor={`name-${index}`}>Name {index + 1}</FormLabel>\n            <Input\n              id={`name-${index}`}\n              value={name}\n              onChange={(event) => updateName(index, event.target.value)}\n              mb={2}\n              minLength={1}\n              maxLength={30}\n            />\n          </FormControl>\n        ))}\n        <Button\n          type=\"submit\"\n          variant=\"solid\"\n          variantColor=\"green\"\n          rightIcon={MdSend}\n          float=\"right\"\n        >\n          Submit names\n        </Button>\n        <Button\n          variant=\"outline\"\n          rightIcon={MdSkipNext}\n          float=\"left\"\n          onClick={() => onSubmit([])}\n        >\n          Skip and join\n        </Button>\n      </form>\n      <Clearfix />\n    </Page>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport {\n  Button,\n  Stack,\n  FormControl,\n  FormLabel,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/core\";\nimport Page from \"../components/Page\";\nimport { FiPlay, FiClock } from \"react-icons/fi\";\nimport Clearfix from \"../components/Clearfix\";\n\nexport default function Waiting({ startTurn, round, noNames, timer, lock }) {\n  const [minutes, setMinutes] = useState(timer ? Math.floor(timer / 60) : 1);\n  const [seconds, setSeconds] = useState(timer ? Math.floor(timer % 60) : 0);\n  const secondsDiv = useRef(null);\n  const minutesDiv = useRef(null);\n  return (\n    <Page\n      heading=\"Wait for your turn\"\n      subHeading='Welcome to tin-tin, press \"Start turn\" when it is your turn. \"Start round\" will be shown if there are no names left.'\n      showLeave\n    >\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          startTurn(minutes, seconds);\n        }}\n      >\n        <Stack isInline spacing={4} mb={4}>\n          <FormControl>\n            <FormLabel htmlFor=\"minutes\">Minutes</FormLabel>\n            <NumberInput\n              id=\"minutes\"\n              value={minutes}\n              min={0}\n              max={5}\n              isInvalid={minutes === 0 && seconds === 0}\n              ref={minutesDiv}\n              onChange={(value) => {\n                const minutesInput = minutesDiv.current.children[0];\n                const secondsInput = secondsDiv.current.children[0];\n                if (value === 0 && seconds === 0) {\n                  minutesInput.setCustomValidity(\n                    \"Either minutes or seconds must be over 0\"\n                  );\n                  minutesInput.reportValidity();\n                } else {\n                  minutesInput.setCustomValidity(\"\");\n                  secondsInput.setCustomValidity(\"\");\n                }\n                setMinutes(value);\n              }}\n            >\n              <NumberInputField type=\"number\" />\n              <NumberInputStepper>\n                <NumberIncrementStepper />\n                <NumberDecrementStepper />\n              </NumberInputStepper>\n            </NumberInput>\n          </FormControl>\n          <FormControl>\n            <FormLabel htmlFor=\"seconds\">Seconds</FormLabel>\n            <NumberInput\n              id=\"seconds\"\n              value={seconds}\n              min={0}\n              max={60}\n              isInvalid={minutes === 0 && seconds === 0}\n              ref={secondsDiv}\n              onChange={(value) => {\n                const minutesInput = minutesDiv.current.children[0];\n                const secondsInput = secondsDiv.current.children[0];\n                if (value === 0 && minutes === 0) {\n                  secondsInput.setCustomValidity(\n                    \"Either minutes or seconds must be over 0\"\n                  );\n                  secondsInput.reportValidity();\n                } else {\n                  minutesInput.setCustomValidity(\"\");\n                  secondsInput.setCustomValidity(\"\");\n                }\n                setSeconds(value);\n              }}\n            >\n              <NumberInputField type=\"number\" />\n              <NumberInputStepper>\n                <NumberIncrementStepper />\n                <NumberDecrementStepper />\n              </NumberInputStepper>\n            </NumberInput>\n          </FormControl>\n        </Stack>\n        <Stack isInline justify=\"space-between\">\n          <Button\n            variant=\"outline\"\n            variantColor=\"blue\"\n            rightIcon={FiClock}\n            onClick={() => {\n              setMinutes(1);\n              setSeconds(0);\n            }}\n          >\n            1 Minute\n          </Button>\n          <Button\n            variant=\"outline\"\n            variantColor=\"blue\"\n            rightIcon={FiClock}\n            onClick={() => {\n              setMinutes(0);\n              setSeconds(30);\n            }}\n          >\n            30 seconds\n          </Button>\n          <Button\n            type=\"submit\"\n            variant={round ? \"solid\" : \"outline\"}\n            variantColor=\"green\"\n            rightIcon={FiPlay}\n            isDisabled={noNames || lock}\n          >\n            Start {round ? \"round\" : \"turn\"}\n          </Button>\n        </Stack>\n      </form>\n      <Clearfix />\n    </Page>\n  );\n}\n","import React, { useState } from \"react\";\nimport { IconButton, Text, Flex } from \"@chakra-ui/core\";\nimport { FiPause, FiPlay, FiRepeat, FiEye, FiEyeOff } from \"react-icons/fi\";\n\nfunction pad(number) {\n  const str = number.toString();\n  if (str.length === 1) {\n    return \"0\" + str;\n  } else {\n    return str;\n  }\n}\n\nexport default function Timer({ time, reset, toggle, isPaused, ...props }) {\n  const [hidden, setHidden] = useState(false);\n  return (\n    <Flex\n      rounded=\"md\"\n      borderWidth={1}\n      borderColor=\"black\"\n      px={1}\n      alignItems=\"center\"\n      {...props}\n    >\n      <IconButton\n        size=\"sm\"\n        aria-label=\"Hide timer\"\n        icon={hidden ? FiEye : FiEyeOff}\n        variant=\"ghost\"\n        onClick={() => setHidden(!hidden)}\n      />\n      <Text\n        as=\"span\"\n        fontSize=\"md\"\n        style={{ fontVariantNumeric: \"tabular-nums\" }}\n        opacity={hidden ? 0 : 1}\n        mx={2}\n      >\n        {pad(Math.floor(time / 60))}:{pad(Math.floor(time % 60))}\n      </Text>\n      <IconButton\n        size=\"sm\"\n        aria-label={isPaused ? \"Resume timer\" : \"Pause timer\"}\n        icon={isPaused ? FiPlay : FiPause}\n        variant=\"ghost\"\n        onClick={() => toggle()}\n      />\n      <IconButton\n        size=\"sm\"\n        aria-label=\"Reset timer\"\n        icon={FiRepeat}\n        variant=\"ghost\"\n        onClick={() => reset()}\n      />\n    </Flex>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function useLocalStorageState(name, defaultValue = null) {\n  const [state, setState] = useState(() => {\n    const fromLocal = window.localStorage.getItem(name);\n    if (fromLocal !== null) {\n      try {\n        return JSON.parse(fromLocal);\n      } catch (e) {}\n    }\n    return defaultValue;\n  });\n\n  function setLocalStorageState(newState) {\n    window.localStorage.setItem(name, JSON.stringify(newState));\n    setState(newState);\n  }\n\n  function cleanupLocalStorageState() {\n    window.localStorage.removeItem(name);\n  }\n\n  return [state, setLocalStorageState, cleanupLocalStorageState];\n}\n","import React from \"react\";\nimport {\n  Button,\n  Box,\n  Checkbox,\n  Text,\n  Stack,\n  IconButton,\n  AlertDialog,\n  AlertDialogOverlay,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogBody,\n  AlertDialogFooter,\n  Flex,\n} from \"@chakra-ui/core\";\nimport Page from \"../components/Page\";\nimport { Swipeable, direction } from \"react-deck-swiper\";\nimport { noselect } from \"./Playing.module.css\";\nimport Clearfix from \"../components/Clearfix\";\nimport {\n  FiPause,\n  FiCheck,\n  FiDownload,\n  FiUpload,\n  FiVolumeX,\n} from \"react-icons/fi\";\nimport Timer from \"../components/Timer\";\nimport useLocalStorageState from \"../useLocalStorageState\";\nimport useTimer from \"../useTimer\";\n\nexport default function Playing({ names: initialNames, endTurn, timer }) {\n  const [names, setNames, cleanupNames] = useLocalStorageState(\n    \"names\",\n    initialNames\n  );\n  const [\n    currentTile,\n    setCurrentTile,\n    cleanupCurrentTile,\n  ] = useLocalStorageState(\"currentTile\", 0);\n  const [passed, setPassed, cleanupPassed] = useLocalStorageState(\n    \"passed\",\n    null\n  );\n  const [isOpen, setIsOpen, cleanupIsOpen] = useLocalStorageState(\n    \"isOpen\",\n    false\n  );\n  const [\n    isCancelable,\n    setIsCancelable,\n    cleanupIsCancelable,\n  ] = useLocalStorageState(\"isCancelable\", true);\n\n  const [\n    time,\n    isPaused,\n    setIsPaused,\n    resetTimer,\n    cleanupTimer,\n    alarmPlaying,\n    stopAlarm,\n  ] = useTimer(timer, () => {\n    setIsCancelable(false);\n    setIsOpen(true);\n  });\n\n  const closeAlert = () => {\n    setIsPaused(false);\n    setIsOpen(false);\n  };\n  function openAlert() {\n    setIsPaused(true);\n    setIsOpen(true);\n  }\n  const cancelRef = React.useRef();\n\n  function end() {\n    cleanupNames();\n    cleanupCurrentTile();\n    cleanupPassed();\n    cleanupIsOpen();\n    cleanupIsCancelable();\n    cleanupTimer();\n    endTurn(names);\n  }\n\n  function updateName(index, value) {\n    const newNames = [...names];\n    newNames[index].answered = !!value;\n    setNames(newNames);\n  }\n\n  function onSwipe(swipeDirection) {\n    let answeredPassed = false;\n    if (swipeDirection === direction.LEFT) {\n      if (passed !== null) {\n        updateName(passed, true);\n        setPassed(null);\n        answeredPassed = true;\n      } else {\n        setPassed(currentTile);\n      }\n    } else if (swipeDirection === direction.RIGHT) {\n      updateName(currentTile, true);\n    }\n    if (!answeredPassed) {\n      if (currentTile + 1 < names.length) {\n        setCurrentTile(currentTile + 1);\n      } else {\n        setCurrentTile(null);\n      }\n    }\n  }\n\n  const outOf =\n    currentTile !== null || passed !== null\n      ? `${(currentTile ?? passed) + 1}/${names.length}`\n      : \"\";\n\n  return (\n    <>\n      <Page heading={`Tin-tin ${outOf}`}>\n        {currentTile !== null || passed !== null ? (\n          <Swipeable\n            onSwipe={onSwipe}\n            renderButtons={({ left, right }) => (\n              <Stack\n                isInline\n                flex=\"1\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                spacing={2}\n                p={8}\n              >\n                <IconButton\n                  size=\"lg\"\n                  aria-label={passed === null ? \"Pass\" : \"Answered passed\"}\n                  icon={passed === null ? FiDownload : FiUpload}\n                  variant=\"solid\"\n                  variantColor={passed === null ? \"red\" : \"orange\"}\n                  onClick={left}\n                />\n                {passed !== null && currentTile !== null && (\n                  <Text flexGrow=\"1\">\n                    <strong>Passed:</strong> {names[passed].name}\n                  </Text>\n                )}\n                <IconButton\n                  size=\"lg\"\n                  aria-label={\n                    currentTile !== null ? \"Correct\" : \"Answered passed\"\n                  }\n                  icon={currentTile !== null ? FiCheck : FiUpload}\n                  variantColor={currentTile !== null ? \"green\" : \"orange\"}\n                  onClick={currentTile !== null ? right : left}\n                />\n              </Stack>\n            )}\n          >\n            <Box\n              rounded=\"lg\"\n              borderWidth={1}\n              py=\"6rem\"\n              px={2}\n              textAlign=\"center\"\n            >\n              <Text fontSize=\"3xl\" className={noselect}>\n                {currentTile !== null\n                  ? names[currentTile].name\n                  : `Passed: ${names[passed].name}`}\n              </Text>\n            </Box>\n          </Swipeable>\n        ) : (\n          <Box py=\"6rem\" px={2} textAlign=\"center\">\n            <Text fontSize=\"3xl\" color=\"grey.200\">\n              No more names!\n            </Text>\n          </Box>\n        )}\n        <Flex justifyContent=\"space-between\" mt={10}>\n          <Timer\n            time={time}\n            reset={resetTimer}\n            initialTime={timer}\n            isPaused={isPaused}\n            toggle={() => setIsPaused(!isPaused)}\n          />\n          <Button\n            variant=\"outline\"\n            variantColor=\"red\"\n            rightIcon={FiPause}\n            onClick={openAlert}\n          >\n            End turn\n          </Button>\n        </Flex>\n        <Clearfix />\n      </Page>\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={isCancelable && cancelRef}\n        onClose={isCancelable && closeAlert}\n        closeOnOverlayClick={isCancelable}\n        closeOnEsc={isCancelable}\n      >\n        <AlertDialogOverlay />\n        {alarmPlaying ? (\n          <AlertDialogContent>\n            <AlertDialogHeader\n              fontSize=\"lg\"\n              fontWeight=\"bold\"\n              textAlign=\"center\"\n            >\n              Time is up!\n            </AlertDialogHeader>\n            <AlertDialogBody paddingBottom={5}>\n              <Stack isInline justify=\"center\">\n                <Button\n                  onClick={stopAlarm}\n                  flexDirection={\"column\"}\n                  paddingX={8}\n                  paddingY={12}\n                  variantColor=\"red\"\n                >\n                  <FiVolumeX size={30} style={{ marginBottom: \"0.5rem\" }} />\n                  Stop Alarm\n                </Button>\n              </Stack>\n            </AlertDialogBody>\n          </AlertDialogContent>\n        ) : (\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              Double check you did not mis-click anything:\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              {names\n                .slice(0, currentTile !== null ? currentTile + 1 : names.length)\n                .map(({ name, answered }, index) => (\n                  <Checkbox\n                    id={`name-${index}`}\n                    isChecked={answered}\n                    onChange={(event) =>\n                      updateName(index, event.target.checked)\n                    }\n                    isInline\n                    isFullWidth\n                    key={index}\n                    rounded=\"md\"\n                    borderWidth={1}\n                    p={2}\n                    mb={2}\n                  >\n                    {name}\n                  </Checkbox>\n                ))}\n              <Text>\n                You scored\n                {\": \" +\n                  names.reduce(\n                    (total, { answered }) => (total += Number(answered)),\n                    0\n                  )}\n              </Text>\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              {isCancelable && (\n                <Button ref={cancelRef} onClick={closeAlert}>\n                  Cancel\n                </Button>\n              )}\n              <Button variantColor=\"green\" onClick={end} ml={3}>\n                Confirm\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        )}\n      </AlertDialog>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport useLocalStorageState from \"./useLocalStorageState\";\n\nexport default function useTimer(start, onTimerEnd) {\n  const [isPaused, setIsPaused] = useState(false);\n  const [time, setTime, cleanupStorage] = useLocalStorageState(\"time\", start);\n  const [last, setLast] = useState(Date.now());\n  const [alarm] = useState(() => {\n    const out = new Audio(`${process.env.PUBLIC_URL}/alarm.mp3`);\n    out.loop = true;\n    return out;\n  });\n  const [alarmPlaying, setAlarmPlaying] = useState(false);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (isPaused !== true) {\n        const current = Date.now();\n        const delta = current - last;\n        if (delta >= 1000) {\n          if (time - 1 > 0) {\n            setTime(time - 1);\n          } else {\n            setTime(0);\n            setIsPaused(true);\n            alarm.play();\n            setAlarmPlaying(true);\n            onTimerEnd && onTimerEnd();\n          }\n        } else {\n          setLast(current);\n        }\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  });\n\n  function reset() {\n    setTime(start);\n    setLast(Date.now());\n    alarm.pause();\n    setAlarmPlaying(false);\n  }\n\n  function cleanup() {\n    cleanupStorage();\n    alarm.pause();\n  }\n\n  function stopAlarm() {\n    alarm.pause();\n    setAlarmPlaying(false);\n  }\n\n  return [time, isPaused, setIsPaused, reset, cleanup, alarmPlaying, stopAlarm];\n}\n","import React from \"react\";\nimport {\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n} from \"@chakra-ui/core\";\n\nexport default function Error({ title = \"Something went wrong\", error }) {\n  return (\n    <Alert\n      status=\"error\"\n      variant=\"subtle\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      textAlign=\"center\"\n      height=\"200px\"\n    >\n      <AlertIcon size=\"40px\" mr={0} />\n      <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n        {title}\n      </AlertTitle>\n      <AlertDescription maxWidth=\"sm\">{error.toString()}</AlertDescription>\n    </Alert>\n  );\n}\n","import React from \"react\";\nexport default function useAsyncError() {\n  const [, setError] = React.useState();\n  return React.useCallback(\n    (e) => {\n      setError(() => {\n        throw e;\n      });\n    },\n    [setError]\n  );\n}\n","import firebase from \"./firebase\";\n\nexport async function trackEvent(sessionId, data) {\n  return firebase.database().ref(`sessions/${sessionId}/events`).push({\n    data,\n    timestamp: Date.now(),\n  });\n}\n","import React from \"react\";\n\nimport firebase from \"../firebase\";\nimport { useObject } from \"react-firebase-hooks/database\";\nimport { useParams } from \"react-router-dom\";\nimport useUser, { USERSTATE } from \"../useUser\";\nimport Submitting from \"./Submitting\";\nimport { Spinner, Flex, Text } from \"@chakra-ui/core\";\nimport Waiting from \"./Waiting\";\nimport Playing from \"./Playing\";\nimport Error from \"../components/Error\";\nimport Page from \"../components/Page\";\nimport useAsyncError from \"../useAsyncError\";\nimport useOnlineStatus from \"@rehooks/online-status\";\nimport { trackEvent } from \"../events\";\n\nfunction addNames(session, sessionId, user, updateUser, throwError) {\n  return (names) => {\n    const previous = session.carbon ? Object.values(session.carbon) : [];\n    firebase\n      .database()\n      .ref(`sessions/${sessionId}/carbon`)\n      .set([...previous, ...names])\n      .then(() => {\n        updateUser({ ...user, state: USERSTATE.WAITING });\n      })\n      .catch(throwError);\n  };\n}\n\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nfunction startTurn(sessionId, user, updateUser, throwError, round) {\n  return (minutes, seconds) => {\n    // Get the most up to date session, the main session object should be syned automatically.\n    firebase\n      .database()\n      .ref(`sessions/${sessionId}`)\n      .once(\"value\")\n      .then((sessionRef) => {\n        const session = sessionRef.val();\n        if (!session.lock) {\n          firebase\n            .database()\n            .ref(`sessions/${sessionId}/lock`)\n            .set(true)\n            .then(async () => {\n              const names = session.current\n                ? Object.values(session.current)\n                : Object.values(session.carbon);\n              if (!session.current) {\n                await firebase\n                  .database()\n                  .ref(`sessions/${sessionId}/current`)\n                  .set([...names])\n                  .catch(throwError);\n              }\n              return names;\n            })\n            .then((names) => {\n              updateUser({\n                ...user,\n                names: shuffle(names).map((name) => ({\n                  name,\n                  answered: false,\n                })),\n                state: USERSTATE.PLAYING,\n                timer: minutes * 60 + seconds,\n              });\n            })\n            .then(() => {\n              trackEvent(sessionId, {\n                event: \"start_turn\",\n                current: JSON.stringify(session.current ?? []),\n                minutes,\n                seconds,\n                round,\n              });\n            })\n            .catch(throwError);\n        }\n      });\n  };\n}\n\nfunction endTurn(session, sessionId, user, updateUser, throwError) {\n  return (names) => {\n    const before = [...names];\n    const after = names.filter(({ answered }) => !answered);\n    names = after.map(({ name }) => name);\n    firebase\n      .database()\n      .ref(`sessions/${sessionId}/current`)\n      .set([...names])\n      .then(() =>\n        firebase.database().ref(`sessions/${sessionId}/lock`).set(false)\n      )\n      .then(() => {\n        updateUser({ ...user, names: undefined, state: USERSTATE.WAITING });\n      })\n      .then(() => {\n        trackEvent(sessionId, {\n          event: \"end_turn\",\n          n: before.length - after.length,\n          before: JSON.stringify(before),\n          after: JSON.stringify(after),\n          current: JSON.stringify(session.current ?? []),\n        });\n      })\n      .catch(throwError);\n  };\n}\n\nfunction renderScreen(session, sessionId, user, updateUser, throwError) {\n  switch (user.state) {\n    case USERSTATE.SUBMITTING:\n      return (\n        <Submitting\n          count={session.count}\n          onSubmit={addNames(session, sessionId, user, updateUser, throwError)}\n        />\n      );\n    case USERSTATE.WAITING:\n      return (\n        <Waiting\n          startTurn={startTurn(\n            sessionId,\n            user,\n            updateUser,\n            throwError,\n            !session.current || Object.values(session.current).length === 0\n          )}\n          round={\n            !session.current || Object.values(session.current).length === 0\n          }\n          noNames={\n            !session.carbon || Object.values(session.carbon).length === 0\n          }\n          timer={user.timer}\n          lock={!!session.lock}\n        />\n      );\n    case USERSTATE.PLAYING:\n      return (\n        <Playing\n          names={user.names}\n          timer={user.timer}\n          endTurn={endTurn(session, sessionId, user, updateUser, throwError)}\n        />\n      );\n    default:\n      return `Unknown state: ${user.state}`;\n  }\n}\n\nexport default function Session() {\n  const { id: sessionId } = useParams();\n  const throwError = useAsyncError();\n  const [session, sessionLoading, sessionError] = useObject(\n    firebase.database().ref(`sessions/${sessionId}`)\n  );\n  const [user, updateUser] = useUser(sessionId);\n  const sessionExists = session && session.val();\n  const isOnline = useOnlineStatus();\n  return (\n    <>\n      {((sessionLoading && !sessionError) || !isOnline) && (\n        <Flex\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          direction=\"column\"\n          mt={16}\n        >\n          {!isOnline && (\n            <Text mb={4} fontSize=\"lg\">\n              Offline, reconnecting\n            </Text>\n          )}\n          <Spinner size=\"xl\" transform=\"translate(-50%, -50%)\" />\n        </Flex>\n      )}\n      {(sessionError || !sessionExists) && !sessionLoading && isOnline && (\n        <Page>\n          <Error\n            title={sessionError ? undefined : \"Session ID does not exist\"}\n            error={\n              sessionError\n                ? sessionError.toString()\n                : \"Please check you copied it correctly\"\n            }\n          />\n        </Page>\n      )}\n      {!sessionLoading &&\n        !sessionError &&\n        sessionExists &&\n        isOnline &&\n        renderScreen(session.val(), sessionId, user, updateUser, throwError)}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Divider, Box, Text } from \"@chakra-ui/core\";\n\nexport default function TextSeperator({ text, ...props }) {\n  return (\n    <Box position=\"relative\" {...props}>\n      <Divider borderColor=\"gray.400\" />\n      <Text\n        position=\"absolute\"\n        top=\"50%\"\n        left=\"50%\"\n        transform=\"translate(-50%, -50%)\"\n        backgroundColor=\"white\"\n        paddingX={2}\n      >\n        {text}\n      </Text>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Button,\n  Spinner,\n  Input,\n  InputGroup,\n} from \"@chakra-ui/core\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport useUser from \"./useUser\";\nimport firebase from \"./firebase\";\nimport Page from \"./components/Page\";\nimport { FiPlus, FiLogIn, FiLogOut, FiUserPlus } from \"react-icons/fi\";\nimport Clearfix from \"./components/Clearfix\";\nimport useAsyncError from \"./useAsyncError\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport Error from \"./components/Error\";\nimport TextSeperator from \"./components/TextSeperator\";\n\nexport default function CreateSession() {\n  const [session, setSession] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let [admin, loading, error] = useAuthState(firebase.auth());\n  const [authError, setAuthError] = useState(undefined);\n  const [count, setCount] = useState(4);\n  const [key, setKey] = useState(undefined);\n  const [customID, setCustomID] = useState(\"\");\n  const [user, updateUser] = useUser();\n  const throwError = useAsyncError();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user.sessionId) {\n      setKey(user.sessionId);\n    }\n  }, [user.sessionId]);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    const customPromise =\n      !!customID && customID.length > 0 && customID.length < 20\n        ? firebase\n            .database()\n            .ref(`sessions/${customID}`)\n            .once(\"value\")\n            .then((session) => !session.val())\n        : Promise.resolve(false);\n\n    customPromise.then((useCustom) => {\n      if (useCustom) {\n        firebase\n          .database()\n          .ref(`sessions/${customID}`)\n          .set({\n            count,\n            timestamp: Date.now(),\n          })\n          .then(() => {\n            updateUser({ ...user, sessionId: customID });\n          })\n          .catch(throwError);\n      } else {\n        firebase\n          .database()\n          .ref(\"sessions\")\n          .push({\n            count,\n            timestamp: Date.now(),\n          })\n          .then(({ key: sessionId }) => {\n            updateUser({ ...user, sessionId });\n          })\n          .catch(throwError);\n      }\n    });\n  }\n\n  function signin() {\n    setAuthError(undefined);\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(username, password)\n      .catch(setAuthError);\n  }\n\n  function signout() {\n    firebase.auth().signOut().catch(setAuthError);\n  }\n\n  function renderJoin() {\n    return (\n      <>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            history.push(`/sessions/${encodeURIComponent(session)}`);\n          }}\n        >\n          <FormControl mb={4}>\n            <FormLabel htmlFor=\"session\">Enter a session id:</FormLabel>\n            <InputGroup size=\"md\">\n              <Input\n                type=\"text\"\n                id=\"session\"\n                value={session}\n                onChange={(event) => setSession(event.target.value)}\n                style={{\n                  borderTopRightRadius: 0,\n                  borderBottomRightRadius: 0,\n                  borderRight: 0,\n                }}\n                isRequired\n              />\n            </InputGroup>\n          </FormControl>\n          <Button\n            type=\"submit\"\n            size=\"md\"\n            variantColor=\"green\"\n            rightIcon={FiUserPlus}\n          >\n            Join\n          </Button>\n        </form>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {loading && !error && (\n        <Spinner\n          size=\"xl\"\n          position=\"absolute\"\n          top=\"50%\"\n          left=\"50%\"\n          transform=\"translate(-50%, -50%)\"\n        />\n      )}\n      {!loading && error && (\n        <Page>\n          <Error error={error.toString()} />\n        </Page>\n      )}\n      {!loading &&\n        !error &&\n        admin &&\n        (key ? (\n          <Redirect to={`/sessions/${key}`} />\n        ) : (\n          <Page\n            header={true}\n            heading=\"Create a new session\"\n            subHeading=\"Start a new tin-tin game session with the number of names per player you want. You will be redirected to a shareable url that other players can join from.\"\n          >\n            <form onSubmit={onSubmit}>\n              <FormControl>\n                <FormLabel htmlFor=\"count\">\n                  Number of names a player can select\n                </FormLabel>\n                <NumberInput\n                  id=\"count\"\n                  defaultValue={count}\n                  min={1}\n                  max={10}\n                  onChange={setCount}\n                  mb={4}\n                >\n                  <NumberInputField type=\"number\" />\n                  <NumberInputStepper>\n                    <NumberIncrementStepper />\n                    <NumberDecrementStepper />\n                  </NumberInputStepper>\n                </NumberInput>\n              </FormControl>\n              <FormControl>\n                <FormLabel htmlFor=\"customID\">Custom Session ID</FormLabel>\n                <Input\n                  id=\"customID\"\n                  type=\"text\"\n                  onChange={(event) => setCustomID(event.target.value)}\n                  value={customID}\n                  mb={4}\n                />\n              </FormControl>\n              <Button\n                variant=\"outline\"\n                rightIcon={FiLogOut}\n                float=\"left\"\n                onClick={() => signout()}\n              >\n                Logout\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"solid\"\n                variantColor=\"green\"\n                rightIcon={FiPlus}\n                float=\"right\"\n              >\n                Create new session\n              </Button>\n            </form>\n            <Clearfix />\n            <TextSeperator text=\"or\" marginY={10} />\n            {renderJoin()}\n          </Page>\n        ))}\n      {!admin && !loading && !error && (\n        <Page\n          header={true}\n          subHeading=\"Join a session with a unique session id or login to create a new session (closed beta).\"\n        >\n          {authError && <Error error={authError} />}\n          {renderJoin()}\n          <TextSeperator text=\"or\" marginY={10} />\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n              signin();\n            }}\n          >\n            <FormControl isRequired mb={4}>\n              <FormLabel htmlFor=\"username\">Username</FormLabel>\n              <Input\n                type=\"email\"\n                id=\"username\"\n                value={username}\n                onChange={(event) => setUsername(event.target.value)}\n                mb={2}\n              />\n            </FormControl>\n            <FormControl isRequired mb={4}>\n              <FormLabel htmlFor=\"password\">Password</FormLabel>\n              <Input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(event) => setPassword(event.target.value)}\n                mb={2}\n              />\n            </FormControl>\n            <Button\n              type=\"submit\"\n              variant=\"solid\"\n              variantColor=\"green\"\n              rightIcon={FiLogIn}\n            >\n              Sign in\n            </Button>\n          </form>\n        </Page>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport Error from \"./Error\";\nimport Page from \"./Page\";\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error: error.toString() };\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <Page>\n          <Error error={this.state.error} />\n        </Page>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport { ThemeProvider, CSSReset, Flex, Text } from \"@chakra-ui/core\";\nimport { customTheme } from \"./theme\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Session from \"./Session\";\nimport CreateSession from \"./CreateSession\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport {\n  Alert,\n  AlertIcon,\n  AlertDescription,\n  IconButton,\n} from \"@chakra-ui/core\";\nimport { FiRefreshCw } from \"react-icons/fi\";\n\nfunction App({ isUpdateAvailable, updateAssets }) {\n  return (\n    <Router>\n      <ThemeProvider theme={customTheme}>\n        <Text\n          position=\"absolute\"\n          top=\"0\"\n          right=\"0\"\n          color=\"gray.500\"\n          p={2}\n          fontSize=\"xs\"\n        >\n          {process.env.REACT_APP_VERSION}\n        </Text>\n        <CSSReset />\n        <ErrorBoundary>\n          <Switch>\n            <Route path=\"/sessions/:id\" component={Session} />\n            <Route path=\"/\" component={CreateSession} />\n          </Switch>\n          {isUpdateAvailable && (\n            <Flex\n              position=\"fixed\"\n              bottom={2}\n              left=\"0\"\n              right=\"0\"\n              justifyContent=\"center\"\n            >\n              <Alert status=\"info\" rounded=\"md\">\n                <AlertIcon />\n                <AlertDescription mr={2}>\n                  A new version of Tin-tin is available! Refresh to update.\n                </AlertDescription>\n                <IconButton\n                  icon={FiRefreshCw}\n                  onClick={updateAssets}\n                  size=\"sm\"\n                  variant=\"ghost\"\n                />\n              </Alert>\n            </Flex>\n          )}\n        </ErrorBoundary>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      if (registration.waiting) {\n        if (config && config.onWaiting) {\n          config.onWaiting(registration.waiting);\n        }\n      }\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {\n  useEffect,\n  useState,\n  useContext,\n  useMemo,\n  createContext,\n} from \"react\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst ServiceWorkerContext = createContext();\n\n// https://medium.com/@FezVrasta/service-worker-updates-and-error-handling-with-react-1a3730800e6a\nexport const ServiceWorkerProvider = ({ children }) => {\n  const [waitingServiceWorker, setWaitingServiceWorker] = useState(null);\n  const [isUpdateAvailable, setUpdateAvailable] = useState(false);\n\n  useEffect(() => {\n    serviceWorker.register({\n      onUpdate: (registration) => {\n        setWaitingServiceWorker(registration.waiting);\n        setUpdateAvailable(true);\n      },\n      onWaiting: (waiting) => {\n        setWaitingServiceWorker(waiting);\n        setUpdateAvailable(true);\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    if (waitingServiceWorker) {\n      // We setup an event listener to automatically reload the page\n      // after the Service Worker has been updated, this will trigger\n      // on all the open tabs of our application, so that we don't leave\n      // any tab in an incosistent state\n      waitingServiceWorker.addEventListener(\"statechange\", (event) => {\n        if (event.target.state === \"activated\") {\n          window.location.reload();\n        }\n      });\n    }\n  }, [waitingServiceWorker]);\n\n  const value = useMemo(\n    () => ({\n      isUpdateAvailable,\n      updateAssets: () => {\n        if (waitingServiceWorker) {\n          // We send the SKIP_WAITING message to tell the Service Worker\n          // to update its cache and flush the old one\n          waitingServiceWorker.postMessage({ type: \"SKIP_WAITING\" });\n        }\n      },\n    }),\n    [isUpdateAvailable, waitingServiceWorker]\n  );\n\n  return (\n    <ServiceWorkerContext.Provider value={value}>\n      {children}\n    </ServiceWorkerContext.Provider>\n  );\n};\n\n// With this React Hook we'll be able to access `isUpdateAvailable` and `updateAssets`\nexport const useServiceWorker = () => {\n  return useContext(ServiceWorkerContext);\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { useServiceWorker, ServiceWorkerProvider } from \"./useServiceWorker\";\n\n// https://medium.com/@FezVrasta/service-worker-updates-and-error-handling-with-react-1a3730800e6a\nwindow.addEventListener(\"error\", async (err) => {\n  // Since we are handling the error here, we must make\n  // sure we log it into the console nonetheless, otherwise\n  // it will be very difficult to understand why your app\n  // is crashing.\n  console.error(err);\n\n  // If no service worker is available, our work ends here\n  // because we don't need to unregister the service worker\n  // to make sure the user is able to get a newer version of\n  // our application.\n  if (!navigator.serviceWorker) {\n    return;\n  }\n\n  // On development builds of React, error boundaries don't stop\n  // errors from bubbling up to the window error handler, so we don't\n  // want to execute this code here because it would be unreliable\n  // https://github.com/facebook/react/issues/12897#issuecomment-410036991\n  if (process.env.NODE_ENV !== \"development\") {\n    // We want to run this code only if we detect a new service worker\n    // is getting installed or is installed but waiting to be activated.\n    // This will make sure we don't run this code on a sane environment\n    // that is crashing for an error not related to stale app cache.\n    const registration = await navigator.serviceWorker.ready;\n    if (registration.installing || registration.waiting) {\n      navigator.serviceWorker.ready.then(async (registration) => {\n        await registration.unregister();\n        // Once the service worker is unregistered, we can reload\n        // the page to let the browser download a fresh copy of our app\n        window.location.reload();\n      });\n    }\n  }\n});\n\nfunction Root() {\n  const { isUpdateAvailable, updateAssets } = useServiceWorker();\n\n  return (\n    <>\n      <App isUpdateAvailable={isUpdateAvailable} updateAssets={updateAssets} />\n    </>\n  );\n}\n\nReactDOM.render(\n  <ServiceWorkerProvider>\n    <Root />\n  </ServiceWorkerProvider>,\n  document.getElementById(\"root\")\n);\n","const firebase = require(\"firebase/app\");\nrequire(\"firebase/database\");\nrequire(\"firebase/auth\");\n\nconst config = {\n  apiKey: \"AIzaSyDb3dX8j1yMlbNFGHI9QqRpSBjJ0WsWO4I\",\n  authDomain: \"tin-tin-5e0d8.firebaseapp.com\",\n  databaseURL: \"https://tin-tin-5e0d8.firebaseio.com\",\n  projectId: \"tin-tin-5e0d8\",\n  storageBucket: \"tin-tin-5e0d8.appspot.com\",\n  messagingSenderId: \"196227528129\",\n  appId: \"1:196227528129:web:51ad97056e103f78c2ab40\",\n};\nfirebase.initializeApp(config);\nmodule.exports = firebase;\n"],"sourceRoot":""}
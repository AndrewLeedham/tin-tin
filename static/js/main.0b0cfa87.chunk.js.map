{"version":3,"sources":["theme/index.js","firebase.js","useUser.js","components/Page.js","components/Clearfix.js","Session/Submitting.js","Session/Waiting.js","Session/Playing.js","components/Error.js","useAsyncError.js","Session/index.js","CreateSession.js","components/ErrorBoundary.js","App.js","serviceWorker.js","index.js","Session/Playing.module.css"],"names":["customTheme","theme","colors","brand","50","100","200","300","400","500","600","700","800","900","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","USERSTATE","getUserFromSession","sessionId","raw","window","localStorage","getItem","user","JSON","parse","e","console","warn","createUser","admin","state","names","undefined","setItem","stringify","useUser","useState","setUser","updateUser","Page","heading","subHeading","children","Box","my","maxW","mx","Heading","as","mb","Text","fontSize","Clearfix","style","content","display","clear","Submitting","count","onSubmit","Array","fill","setNames","event","preventDefault","map","name","index","FormControl","key","isRequired","FormLabel","htmlFor","Input","id","value","onChange","newNames","updateName","target","Button","type","variant","variantColor","rightIcon","MdSend","float","MdSkipNext","onClick","Waiting","startTurn","round","noNames","Stack","isInline","justify","spacing","MdTimer","isDisabled","Playing","initialNames","endTurn","currentTile","setCurrentTile","passed","setPassed","React","isOpen","setIsOpen","onClose","cancelRef","useRef","answered","outOf","length","onSwipe","swipeDirection","answeredPassed","direction","LEFT","RIGHT","renderButtons","left","right","flex","justifyContent","p","IconButton","size","aria-label","icon","MdClose","MdCheck","rounded","borderWidth","py","px","textAlign","className","noselect","color","mt","MdTimerOff","AlertDialog","leastDestructiveRef","fontWeight","slice","Checkbox","isChecked","checked","isFullWidth","reduce","total","Number","ref","ml","Error","error","Alert","status","flexDirection","height","mr","maxWidth","useAsyncError","setError","useCallback","addNames","session","throwError","previous","carbon","Object","values","database","set","catch","shuffle","a","i","j","Math","floor","random","current","filter","Session","useParams","useObject","sessionLoading","sessionError","Spinner","position","top","transform","toString","renderScreen","val","CreateSession","setCount","setKey","useEffect","to","push","then","NumberInput","defaultValue","min","max","MdAdd","ErrorBoundary","props","this","Component","App","ThemeProvider","CSSReset","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0b0cfa87.chunk.js","sourcesContent":["import { theme } from \"@chakra-ui/core\";\r\n\r\nexport const customTheme = {\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    // Go to https://smart-swatch.netlify.com/ to easily generate a new color\r\n    // palette.\r\n    brand: {\r\n      50: \"#ffe2e7\",\r\n      100: \"#ffb3bb\",\r\n      200: \"#fc8393\",\r\n      300: \"#f9526d\",\r\n      400: \"#f6224b\",\r\n      500: \"#dd0939\",\r\n      600: \"#ad0320\",\r\n      700: \"#7c000e\",\r\n      800: \"#4d0002\",\r\n      900: \"#200400\"\r\n    }\r\n  }\r\n};\r\n","import firebase from \"firebase/app\";\nimport \"firebase/database\";\nconst config = {\n  apiKey: \"AIzaSyDb3dX8j1yMlbNFGHI9QqRpSBjJ0WsWO4I\",\n  authDomain: \"tin-tin-5e0d8.firebaseapp.com\",\n  databaseURL: \"https://tin-tin-5e0d8.firebaseio.com\",\n  projectId: \"tin-tin-5e0d8\",\n  storageBucket: \"tin-tin-5e0d8.appspot.com\",\n  messagingSenderId: \"196227528129\",\n  appId: \"1:196227528129:web:51ad97056e103f78c2ab40\"\n};\nfirebase.initializeApp(config);\nexport default firebase;\n\nexport function cleanupSession(id) {\n  console.log(\"cleaning up session\");\n}\n","import { useState } from \"react\";\n\nexport const USERSTATE = {\n  SUBMITTING: 0,\n  PLAYING: 1,\n  WAITING: 2,\n};\n\nfunction getUserFromSession(sessionId) {\n  const raw = window.localStorage.getItem(\"user\");\n  if (raw) {\n    try {\n      const user = JSON.parse(raw);\n      if (sessionId && user.sessionId !== sessionId) {\n        return undefined;\n      }\n      return user;\n    } catch (e) {\n      console.warn(\"Could not read user from local session: \", e);\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nfunction createUser(sessionId, admin = false) {\n  const user = {\n    sessionId,\n    admin,\n    state: USERSTATE.SUBMITTING,\n    names: undefined,\n  };\n\n  window.localStorage.setItem(\"user\", JSON.stringify(user));\n\n  return user;\n}\n\nexport default function useUser(sessionId = null) {\n  const [user, setUser] = useState(\n    () =>\n      (sessionId && getUserFromSession(sessionId)) ||\n      createUser(sessionId, !sessionId)\n  );\n\n  function updateUser(user) {\n    window.localStorage.setItem(\"user\", JSON.stringify(user));\n    setUser(user);\n  }\n\n  return [user, updateUser];\n}\n","import React from \"react\";\nimport { Heading, Text, Box } from \"@chakra-ui/core\";\n\nexport default function Page({ heading, subHeading, children }) {\n  return (\n    <Box my=\"10\" maxW=\"md\" mx=\"auto\">\n      {heading && (\n        <Heading as=\"h1\" mb={2}>\n          {heading}\n        </Heading>\n      )}\n      {subHeading && (\n        <Text fontSize=\"xl\" mb={5}>\n          {subHeading}\n        </Text>\n      )}\n      {children}\n    </Box>\n  );\n}\n","import React from \"react\";\n\nexport default function Clearfix({ children }) {\n  return (\n    <div style={{ content: \"\", display: \"table\", clear: \"both\" }}>\n      {children}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, FormControl, FormLabel, Input } from \"@chakra-ui/core\";\nimport Page from \"../components/Page\";\nimport { MdSend, MdSkipNext } from \"react-icons/md\";\nimport Clearfix from \"../components/Clearfix\";\n\nexport default function Submitting({ count, onSubmit }) {\n  const [names, setNames] = useState(new Array(count).fill(\"\"));\n\n  function updateName(index, name) {\n    const newNames = [...names];\n    newNames[index] = name;\n    setNames(newNames);\n  }\n  return (\n    <Page\n      heading=\"Submit your names\"\n      subHeading={`Enter the ${count} names you want to put in the tin, then press \"Submit names\".`}\n    >\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          onSubmit(names);\n        }}\n      >\n        {names.map((name, index) => (\n          <FormControl key={index} isRequired mb={4}>\n            <FormLabel htmlFor={`name-${index}`}>Name {index + 1}</FormLabel>\n            <Input\n              id={`name-${index}`}\n              value={name}\n              onChange={(event) => updateName(index, event.target.value)}\n              mb={2}\n            />\n          </FormControl>\n        ))}\n        <Button\n          type=\"submit\"\n          variant=\"solid\"\n          variantColor=\"green\"\n          rightIcon={MdSend}\n          float=\"right\"\n        >\n          Submit names\n        </Button>\n        <Button\n          variant=\"outline\"\n          rightIcon={MdSkipNext}\n          float=\"left\"\n          onClick={() => onSubmit([])}\n        >\n          Skip and join\n        </Button>\n      </form>\n      <Clearfix />\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { Button, Stack } from \"@chakra-ui/core\";\nimport Page from \"../components/Page\";\nimport { MdTimer } from \"react-icons/md\";\n\nexport default function Waiting({ startTurn, round, noNames }) {\n  return (\n    <Page\n      heading=\"Tin-tin\"\n      subHeading='Welcome to tin-tin, press \"Start turn\" when it is your go. \"Start round\" will be shown if there are no names left.'\n    >\n      <Stack isInline justify=\"center\" spacing={2}>\n        <Button\n          onClick={startTurn}\n          variant=\"solid\"\n          variantColor=\"green\"\n          rightIcon={MdTimer}\n          isDisabled={noNames}\n        >\n          Start {round ? \"round\" : \"turn\"}\n        </Button>\n      </Stack>\n    </Page>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Box,\n  Checkbox,\n  Text,\n  Stack,\n  IconButton,\n  AlertDialog,\n  AlertDialogOverlay,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogBody,\n  AlertDialogFooter,\n} from \"@chakra-ui/core\";\nimport Page from \"../components/Page\";\nimport { Swipeable, direction } from \"react-deck-swiper\";\nimport { noselect } from \"./Playing.module.css\";\nimport Clearfix from \"../components/Clearfix\";\nimport { MdTimerOff, MdCheck, MdClose } from \"react-icons/md\";\n\nexport default function Playing({ names: initialNames, endTurn }) {\n  const [names, setNames] = useState(initialNames);\n  const [currentTile, setCurrentTile] = useState(0);\n  const [passed, setPassed] = useState(undefined);\n  const [isOpen, setIsOpen] = React.useState();\n  const onClose = () => setIsOpen(false);\n  const cancelRef = React.useRef();\n\n  function updateName(index, value) {\n    const newNames = [...names];\n    newNames[index].answered = !!value;\n    setNames(newNames);\n  }\n\n  function onSwipe(swipeDirection) {\n    let answeredPassed = false;\n    if (swipeDirection === direction.LEFT) {\n      if (typeof passed !== \"undefined\") {\n        updateName(passed, true);\n        setPassed(undefined);\n        answeredPassed = true;\n      } else {\n        setPassed(currentTile);\n      }\n    } else if (swipeDirection === direction.RIGHT) {\n      updateName(currentTile, true);\n    }\n    if (!answeredPassed) {\n      if (currentTile + 1 < names.length) {\n        setCurrentTile(currentTile + 1);\n      } else {\n        setCurrentTile(undefined);\n      }\n    }\n  }\n\n  const outOf =\n    typeof currentTile !== \"undefined\" || typeof passed !== \"undefined\"\n      ? `${(currentTile ?? passed) + 1}/${names.length}`\n      : \"\";\n\n  return (\n    <>\n      <Page heading={`Tin-tin ${outOf}`}>\n        {typeof currentTile !== \"undefined\" || typeof passed !== \"undefined\" ? (\n          <Swipeable\n            onSwipe={onSwipe}\n            renderButtons={({ left, right }) => (\n              <Stack\n                isInline\n                flex=\"1\"\n                justifyContent=\"space-between\"\n                spacing={2}\n                p={8}\n              >\n                <IconButton\n                  size=\"lg\"\n                  aria-label={\n                    typeof passed === \"undefined\" ? \"Pass\" : \"Answered passed\"\n                  }\n                  icon={typeof passed === \"undefined\" ? MdClose : MdCheck}\n                  variant=\"solid\"\n                  variantColor={\n                    typeof passed === \"undefined\" ? \"red\" : \"orange\"\n                  }\n                  onClick={left}\n                />\n                {typeof passed !== \"undefined\" &&\n                  typeof currentTile !== \"undefined\" && (\n                    <Text>\n                      <strong>Passed:</strong> {names[passed].name}\n                    </Text>\n                  )}\n                <IconButton\n                  size=\"lg\"\n                  aria-label={\n                    typeof currentTile !== \"undefined\"\n                      ? \"Correct\"\n                      : \"Answered passed\"\n                  }\n                  icon={MdCheck}\n                  variantColor={\n                    typeof currentTile !== \"undefined\" ? \"green\" : \"orange\"\n                  }\n                  onClick={typeof currentTile !== \"undefined\" ? right : left}\n                />\n              </Stack>\n            )}\n          >\n            <Box\n              rounded=\"lg\"\n              borderWidth={1}\n              py=\"6rem\"\n              px={2}\n              textAlign=\"center\"\n            >\n              <Text fontSize=\"3xl\" className={noselect}>\n                {typeof currentTile !== \"undefined\"\n                  ? names[currentTile].name\n                  : `Passed: ${names[passed].name}`}\n              </Text>\n            </Box>\n          </Swipeable>\n        ) : (\n          <Box py=\"6rem\" px={2} textAlign=\"center\">\n            <Text fontSize=\"3xl\" color=\"grey.200\">\n              No more names!\n            </Text>\n          </Box>\n        )}\n        <Stack isInline justify=\"center\" spacing={2} mt={10}>\n          <Button\n            variant=\"outline\"\n            variantColor=\"red\"\n            rightIcon={MdTimerOff}\n            onClick={() => setIsOpen(true)}\n          >\n            End turn\n          </Button>\n        </Stack>\n        <Clearfix />\n      </Page>\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay />\n        <AlertDialogContent>\n          <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n            Double check you did not mis-click anything:\n          </AlertDialogHeader>\n\n          <AlertDialogBody>\n            {names\n              .slice(\n                0,\n                typeof currentTile !== \"undefined\"\n                  ? currentTile + 1\n                  : names.length\n              )\n              .map(({ name, answered }, index) => (\n                <Checkbox\n                  id={`name-${index}`}\n                  isChecked={answered}\n                  onChange={(event) => updateName(index, event.target.checked)}\n                  isInline\n                  isFullWidth\n                  key={index}\n                  rounded=\"md\"\n                  borderWidth={1}\n                  p={2}\n                  mb={2}\n                >\n                  {name}\n                </Checkbox>\n              ))}\n            <Text>\n              You scored\n              {\": \" +\n                names.reduce(\n                  (total, { answered }) => (total += Number(answered)),\n                  0\n                )}\n            </Text>\n          </AlertDialogBody>\n\n          <AlertDialogFooter>\n            <Button ref={cancelRef} onClick={onClose}>\n              Cancel\n            </Button>\n            <Button variantColor=\"green\" onClick={() => endTurn(names)} ml={3}>\n              Confirm\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n} from \"@chakra-ui/core\";\n\nexport default function Error({ error }) {\n  return (\n    <Alert\n      status=\"error\"\n      variant=\"subtle\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      textAlign=\"center\"\n      height=\"200px\"\n    >\n      <AlertIcon size=\"40px\" mr={0} />\n      <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n        Something went wrong\n      </AlertTitle>\n      <AlertDescription maxWidth=\"sm\">{error}</AlertDescription>\n    </Alert>\n  );\n}\n","import React from \"react\";\nexport default function useAsyncError() {\n  const [, setError] = React.useState();\n  return React.useCallback(\n    (e) => {\n      setError(() => {\n        throw e;\n      });\n    },\n    [setError]\n  );\n}\n","import React from \"react\";\n\nimport firebase from \"../firebase\";\nimport { useObject } from \"react-firebase-hooks/database\";\nimport { useParams } from \"react-router-dom\";\nimport useUser, { USERSTATE } from \"../useUser\";\nimport Submitting from \"./Submitting\";\nimport { Spinner } from \"@chakra-ui/core\";\nimport Waiting from \"./Waiting\";\nimport Playing from \"./Playing\";\nimport Error from \"../components/Error\";\nimport Page from \"../components/Page\";\nimport useAsyncError from \"../useAsyncError\";\n\nfunction addNames(session, sessionId, user, updateUser, throwError) {\n  return (names) => {\n    const previous = session.carbon ? Object.values(session.carbon) : [];\n    firebase\n      .database()\n      .ref(`sessions/${sessionId}/carbon`)\n      .set([...previous, ...names])\n      .catch(throwError);\n    updateUser({ ...user, state: USERSTATE.WAITING });\n  };\n}\n\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nfunction startTurn(session, sessionId, user, updateUser, throwError) {\n  return () => {\n    const names = session.current\n      ? Object.values(session.current)\n      : Object.values(session.carbon);\n    if (!session.current) {\n      firebase\n        .database()\n        .ref(`sessions/${sessionId}/current`)\n        .set([...names])\n        .catch(throwError);\n    }\n    updateUser({\n      ...user,\n      names: shuffle(names).map((name) => ({ name, answered: false })),\n      state: USERSTATE.PLAYING,\n    });\n  };\n}\n\nfunction endTurn(sessionId, user, updateUser, throwError) {\n  return (names) => {\n    names = names.filter(({ answered }) => !answered).map(({ name }) => name);\n    firebase\n      .database()\n      .ref(`sessions/${sessionId}/current`)\n      .set([...names])\n      .catch(throwError);\n    updateUser({ ...user, names: undefined, state: USERSTATE.WAITING });\n  };\n}\n\nfunction renderScreen(session, sessionId, user, updateUser, throwError) {\n  switch (user.state) {\n    case USERSTATE.SUBMITTING:\n      return (\n        <Submitting\n          count={session.count}\n          onSubmit={addNames(session, sessionId, user, updateUser, throwError)}\n        />\n      );\n    case USERSTATE.WAITING:\n      return (\n        <Waiting\n          startTurn={startTurn(\n            session,\n            sessionId,\n            user,\n            updateUser,\n            throwError\n          )}\n          round={\n            !session.current || Object.values(session.current).length === 0\n          }\n          noNames={\n            !session.carbon || Object.values(session.carbon).length === 0\n          }\n        />\n      );\n    case USERSTATE.PLAYING:\n      return (\n        <Playing\n          names={user.names}\n          admin={user.admin}\n          endTurn={endTurn(sessionId, user, updateUser, throwError)}\n        />\n      );\n    default:\n      return `Unknown state: ${user.state}`;\n  }\n}\n\nexport default function Session() {\n  const { id: sessionId } = useParams();\n  const throwError = useAsyncError();\n  const [session, sessionLoading, sessionError] = useObject(\n    firebase.database().ref(`sessions/${sessionId}`)\n  );\n  const [user, updateUser] = useUser(sessionId);\n  return (\n    <>\n      {sessionLoading && !sessionError && (\n        <Spinner\n          size=\"xl\"\n          position=\"absolute\"\n          top=\"50%\"\n          left=\"50%\"\n          transform=\"translate(-50%, -50%)\"\n        />\n      )}\n      {sessionError && !sessionLoading && (\n        <Page>\n          <Error error={sessionError.toString()} />\n        </Page>\n      )}\n      {!sessionLoading &&\n        !sessionError &&\n        renderScreen(session.val(), sessionId, user, updateUser, throwError)}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Button,\n} from \"@chakra-ui/core\";\nimport { Redirect } from \"react-router-dom\";\nimport useUser from \"./useUser\";\nimport firebase from \"./firebase\";\nimport Page from \"./components/Page\";\nimport { MdAdd } from \"react-icons/md\";\nimport Clearfix from \"./components/Clearfix\";\nimport useAsyncError from \"./useAsyncError\";\n\nexport default function CreateSession() {\n  const [count, setCount] = useState(4);\n  const [key, setKey] = useState(undefined);\n  const [user, updateUser] = useUser();\n  const throwError = useAsyncError();\n  useEffect(() => {\n    if (user.sessionId) {\n      setKey(user.sessionId);\n    }\n  }, [user.sessionId]);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    firebase\n      .database()\n      .ref(\"sessions\")\n      .push({\n        count,\n      })\n      .then(({ key: sessionId }) => {\n        updateUser({ ...user, sessionId });\n      })\n      .catch((e) => {\n        throwError(e);\n      });\n  }\n\n  return (\n    <>\n      {key ? (\n        <Redirect to={`/sessions/${key}`} />\n      ) : (\n        <Page\n          heading=\"Create a new session\"\n          subHeading=\"Start a new tin-tin game session with the number of names per player you want. You will be redirected to a shareable url that other players can join from.\"\n        >\n          <form onSubmit={onSubmit}>\n            <FormControl>\n              <FormLabel htmlFor=\"count\">\n                Number of names a player can select\n              </FormLabel>\n              <NumberInput\n                id=\"count\"\n                defaultValue={count}\n                min={1}\n                max={10}\n                onChange={setCount}\n                mb={4}\n              >\n                <NumberInputField />\n                <NumberInputStepper>\n                  <NumberIncrementStepper />\n                  <NumberDecrementStepper />\n                </NumberInputStepper>\n              </NumberInput>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              variant=\"solid\"\n              variantColor=\"green\"\n              rightIcon={MdAdd}\n              float=\"right\"\n            >\n              Create new session\n            </Button>\n          </form>\n          <Clearfix />\n        </Page>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport Error from \"./Error\";\nimport Page from \"./Page\";\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error: error.toString() };\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <Page>\n          <Error error={this.state.error} />\n        </Page>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport { customTheme } from \"./theme\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Session from \"./Session\";\nimport CreateSession from \"./CreateSession\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\nfunction App() {\n  return (\n    <Router>\n      <ThemeProvider theme={customTheme}>\n        <CSSReset />\n        <ErrorBoundary>\n          <Switch>\n            <Route path=\"/sessions/:id\" component={Session} />\n            <Route path=\"/\" component={CreateSession} />\n          </Switch>\n        </ErrorBoundary>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noselect\":\"Playing_noselect__28UVJ\"};"],"sourceRoot":""}
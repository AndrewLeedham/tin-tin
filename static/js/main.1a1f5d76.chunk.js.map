{"version":3,"sources":["Session/Playing.module.css","theme/index.js","useUser.js","components/Header.js","components/Page.js","components/Clearfix.js","components/TextSeperator.js","Session/Submitting.js","Session/Waiting.js","components/Timer.js","useLocalStorageState.js","Session/Playing.js","useTimer.js","components/Error.js","useAsyncError.js","events.js","Session/index.js","CreateSession.js","components/ErrorBoundary.js","App.js","serviceWorker.js","useServiceWorker.js","index.js","firebase.js","components/Page.module.css"],"names":["module","exports","customTheme","theme","colors","brand","50","100","200","300","400","500","600","700","800","900","USERSTATE","getUserFromSession","sessionId","raw","window","localStorage","getItem","user","JSON","parse","e","console","warn","createUser","admin","state","names","undefined","playerName","setItem","stringify","useUser","useState","setUser","updateUser","Header","heading","Stack","align","marginBottom","Image","size","src","process","alt","Heading","Page","header","subHeading","children","showLeave","React","isOpen","setIsOpen","onClose","cancelRef","useRef","Box","className","page","position","py","maxW","mx","px","as","mb","Text","fontSize","footer","IconButton","onClick","aria-label","icon","FiLogOut","variant","variantColor","mt","AlertDialog","leastDestructiveRef","fontWeight","Button","ref","Link","to","ml","Clearfix","style","content","display","clear","TextSeperator","text","props","Divider","borderColor","top","left","transform","backgroundColor","paddingX","Submitting","count","onSubmit","Array","fill","setNames","setPlayerName","playerNameRef","event","preventDefault","FormControl","isRequired","FormLabel","htmlFor","Input","id","value","onChange","target","minLength","maxLength","marginY","map","name","index","key","newNames","updateName","type","rightIcon","MdSend","float","MdSkipNext","playerNameInput","current","checkValidity","reportValidity","Waiting","startTurn","round","noNames","timer","lock","Math","floor","minutes","setMinutes","seconds","setSeconds","secondsDiv","minutesDiv","isInline","spacing","NumberInput","min","max","isInvalid","minutesInput","secondsInput","setCustomValidity","justify","FiClock","FiPlay","isDisabled","textAlign","pad","number","str","toString","length","Timer","time","reset","toggle","isPaused","hidden","setHidden","Flex","rounded","borderWidth","alignItems","FiEye","FiEyeOff","fontVariantNumeric","opacity","FiPause","FiRepeat","useLocalStorageState","defaultValue","fromLocal","setState","setLocalStorageState","newState","cleanupLocalStorageState","removeItem","Playing","initialNames","endTurn","cleanupNames","currentTile","setCurrentTile","cleanupCurrentTile","passed","setPassed","cleanupPassed","cleanupIsOpen","isCancelable","setIsCancelable","cleanupIsCancelable","start","onTimerEnd","setIsPaused","setTime","cleanupStorage","Date","now","last","setLast","out","Audio","loop","alarm","alarmPlaying","setAlarmPlaying","useEffect","setInterval","play","clearInterval","pause","useTimer","resetTimer","cleanupTimer","stopAlarm","closeAlert","answered","outOf","onSwipe","swipeDirection","answeredPassed","direction","LEFT","RIGHT","wrapperHeight","renderButtons","right","flex","justifyContent","p","FiDownload","FiUpload","flexGrow","FiCheck","noselect","color","initialTime","closeOnOverlayClick","closeOnEsc","paddingBottom","flexDirection","paddingY","slice","Checkbox","isChecked","checked","isFullWidth","reduce","total","Number","Error","title","error","Alert","status","height","mr","maxWidth","useAsyncError","setError","useCallback","trackEvent","data","a","firebase","database","push","timestamp","addNames","session","throwError","previous","carbon","Object","values","set","then","catch","shuffle","i","j","random","once","sessionRef","val","before","after","filter","n","Session","useParams","useObject","sessionLoading","sessionError","sessionExists","isOnline","useOnlineStatus","Spinner","renderScreen","CreateSession","setSession","username","setUsername","password","setPassword","useAuthState","auth","loading","authError","setAuthError","setCount","setKey","customID","setCustomID","history","useHistory","renderJoin","encodeURIComponent","InputGroup","borderTopRightRadius","borderBottomRightRadius","borderRight","FiUserPlus","Promise","resolve","useCustom","signOut","FiPlus","signInWithEmailAndPassword","FiLogIn","ErrorBoundary","this","Component","App","isUpdateAvailable","updateAssets","ThemeProvider","CSSReset","path","component","bottom","FiRefreshCw","isLocalhost","Boolean","location","hostname","match","register","config","navigator","URL","href","origin","addEventListener","swUrl","fetch","headers","response","contentType","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","log","checkValidServiceWorker","waiting","onWaiting","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ServiceWorkerContext","createContext","ServiceWorkerProvider","waitingServiceWorker","setWaitingServiceWorker","setUpdateAvailable","useMemo","postMessage","Provider","Root","useContext","err","ReactDOM","render","document","getElementById","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId"],"mappings":"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","file":"static/js/main.1a1f5d76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"noselect\":\"Playing_noselect__28UVJ\"};","import { theme } from \"@chakra-ui/core\";\n\nexport const customTheme = {\n  ...theme,\n  colors: {\n    ...theme.colors,\n    // Go to https://smart-swatch.netlify.com/ to easily generate a new color\n    // palette.\n    brand: {\n      50: \"#ffe2e7\",\n      100: \"#ffb3bb\",\n      200: \"#fc8393\",\n      300: \"#f9526d\",\n      400: \"#f6224b\",\n      500: \"#dd0939\",\n      600: \"#ad0320\",\n      700: \"#7c000e\",\n      800: \"#4d0002\",\n      900: \"#200400\",\n    },\n  },\n};\n","import { useState } from \"react\";\n\nexport const USERSTATE = {\n  SUBMITTING: 0,\n  PLAYING: 1,\n  WAITING: 2,\n};\n\nfunction getUserFromSession(sessionId) {\n  const raw = window.localStorage.getItem(\"user\");\n  if (raw) {\n    try {\n      const user = JSON.parse(raw);\n      if (sessionId && user.sessionId !== sessionId) {\n        return undefined;\n      }\n      return user;\n    } catch (e) {\n      console.warn(\"Could not read user from local session: \", e);\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nfunction createUser(sessionId, admin = false) {\n  const user = {\n    sessionId,\n    admin,\n    state: USERSTATE.SUBMITTING,\n    names: undefined,\n    playerName: undefined,\n  };\n\n  window.localStorage.setItem(\"user\", JSON.stringify(user));\n\n  return user;\n}\n\nexport default function useUser(sessionId = null) {\n  const [user, setUser] = useState(\n    () =>\n      (sessionId && getUserFromSession(sessionId)) ||\n      createUser(sessionId, !sessionId)\n  );\n\n  function updateUser(user) {\n    window.localStorage.setItem(\"user\", JSON.stringify(user));\n    setUser(user);\n  }\n\n  return [user, updateUser];\n}\n","import React from \"react\";\nimport { Stack, Heading, Image } from \"@chakra-ui/core\";\n\nexport default function Header({ heading = \"Tin-tin\" }) {\n  return (\n    <Stack align=\"center\" marginBottom={10}>\n      <Image\n        size=\"150px\"\n        src={`${process.env.PUBLIC_URL}/logo512.png`}\n        alt=\"Tin-tin\"\n      />\n      <Heading>{heading}</Heading>\n    </Stack>\n  );\n}\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Box,\n  IconButton,\n  AlertDialog,\n  AlertDialogOverlay,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogBody,\n  AlertDialogFooter,\n  Button,\n} from \"@chakra-ui/core\";\nimport Header from \"./Header\";\nimport { FiLogOut } from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\nimport { footer, page } from \"./Page.module.css\";\n\nexport default function Page({\n  header,\n  heading,\n  subHeading,\n  children,\n  showLeave,\n}) {\n  const [isOpen, setIsOpen] = React.useState();\n  const onClose = () => setIsOpen(false);\n  const cancelRef = React.useRef();\n  return (\n    <>\n      <Box\n        className={page}\n        position=\"relative\"\n        py=\"10\"\n        maxW=\"md\"\n        mx=\"auto\"\n        px=\"4\"\n      >\n        <div>\n          {header && <Header heading={heading} />}\n          {heading && !header && (\n            <Heading as=\"h1\" mb={2}>\n              {heading}\n            </Heading>\n          )}\n          {subHeading && (\n            <Text fontSize=\"xl\" mb={5}>\n              {subHeading}\n            </Text>\n          )}\n          {children}\n        </div>\n\n        {showLeave && (\n          <footer className={footer}>\n            <IconButton\n              onClick={() => setIsOpen(true)}\n              aria-label={\"Leave session\"}\n              icon={FiLogOut}\n              variant=\"outline\"\n              variantColor={\"red\"}\n              mt={10}\n            />\n          </footer>\n        )}\n      </Box>\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay />\n        <AlertDialogContent>\n          <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n            Leave session\n          </AlertDialogHeader>\n\n          <AlertDialogBody>Are you sure you want to leave?</AlertDialogBody>\n\n          <AlertDialogFooter>\n            <Button ref={cancelRef} onClick={onClose}>\n              Cancel\n            </Button>\n            <Button as={Link} to=\"/\" variantColor=\"red\" ml={3}>\n              Leave session\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Clearfix({ children }) {\n  return (\n    <div style={{ content: \"\", display: \"table\", clear: \"both\" }}>\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Divider, Box, Text } from \"@chakra-ui/core\";\n\nexport default function TextSeperator({ text, ...props }) {\n  return (\n    <Box position=\"relative\" {...props}>\n      <Divider borderColor=\"gray.400\" />\n      <Text\n        position=\"absolute\"\n        top=\"50%\"\n        left=\"50%\"\n        transform=\"translate(-50%, -50%)\"\n        backgroundColor=\"white\"\n        paddingX={2}\n      >\n        {text}\n      </Text>\n    </Box>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport { Button, FormControl, FormLabel, Input } from \"@chakra-ui/core\";\nimport Page from \"../components/Page\";\nimport { MdSend, MdSkipNext } from \"react-icons/md\";\nimport Clearfix from \"../components/Clearfix\";\nimport TextSeperator from \"../components/TextSeperator\";\n\nexport default function Submitting({ count, onSubmit }) {\n  const [names, setNames] = useState(new Array(count).fill(\"\"));\n  const [playerName, setPlayerName] = useState(\"\");\n  const playerNameRef = useRef(null);\n\n  function updateName(index, name) {\n    const newNames = [...names];\n    newNames[index] = name;\n    setNames(newNames);\n  }\n  return (\n    <Page\n      heading=\"Submit your names\"\n      subHeading={`Enter the ${count} names you want to put in the tin, then press \"Submit names\".`}\n      showLeave\n    >\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          onSubmit(playerName, names);\n        }}\n      >\n        <FormControl isRequired mb={4}>\n          <FormLabel htmlFor=\"player-name\">Your name</FormLabel>\n          <Input\n            id=\"player-name\"\n            value={playerName}\n            onChange={(event) => setPlayerName(event.target.value)}\n            mb={2}\n            minLength={1}\n            maxLength={30}\n            ref={playerNameRef}\n          />\n        </FormControl>\n        <TextSeperator marginY={10} />\n        {names.map((name, index) => (\n          <FormControl key={index} isRequired mb={4}>\n            <FormLabel htmlFor={`name-${index}`}>Name {index + 1}</FormLabel>\n            <Input\n              id={`name-${index}`}\n              value={name}\n              onChange={(event) => updateName(index, event.target.value)}\n              mb={2}\n              minLength={1}\n              maxLength={30}\n            />\n          </FormControl>\n        ))}\n        <Button\n          type=\"submit\"\n          variant=\"solid\"\n          variantColor=\"green\"\n          rightIcon={MdSend}\n          float=\"right\"\n        >\n          Submit names\n        </Button>\n        <Button\n          variant=\"outline\"\n          rightIcon={MdSkipNext}\n          float=\"left\"\n          onClick={() => {\n            const playerNameInput = playerNameRef.current;\n            if (playerNameInput.checkValidity()) {\n              onSubmit(playerName, []);\n            } else {\n              playerNameInput.reportValidity();\n            }\n          }}\n        >\n          Skip and join\n        </Button>\n      </form>\n      <Clearfix />\n    </Page>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport {\n  Button,\n  Stack,\n  FormControl,\n  FormLabel,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Text,\n  AlertDialog,\n  AlertDialogOverlay,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogBody,\n  AlertDialogFooter,\n} from \"@chakra-ui/core\";\nimport Page from \"../components/Page\";\nimport { FiPlay, FiClock } from \"react-icons/fi\";\nimport Clearfix from \"../components/Clearfix\";\n\nexport default function Waiting({\n  user,\n  startTurn,\n  round,\n  noNames,\n  timer,\n  lock,\n}) {\n  const [minutes, setMinutes] = useState(timer ? Math.floor(timer / 60) : 1);\n  const [seconds, setSeconds] = useState(timer ? Math.floor(timer % 60) : 0);\n  const secondsDiv = useRef(null);\n  const minutesDiv = useRef(null);\n  const [isOpen, setIsOpen] = React.useState();\n  const onClose = () => setIsOpen(false);\n  const cancelRef = React.useRef();\n  return (\n    <>\n      <Page\n        heading=\"Wait for your turn\"\n        subHeading={`Hi ${user.playerName}. Welcome to tin-tin, press \"Start turn\" when it is your turn. \"Start round\" will be shown if there are no names left.`}\n        showLeave\n      >\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            startTurn(minutes, seconds);\n          }}\n        >\n          <Stack isInline spacing={4} mb={4}>\n            <FormControl>\n              <FormLabel htmlFor=\"minutes\">Minutes</FormLabel>\n              <NumberInput\n                id=\"minutes\"\n                value={minutes}\n                min={0}\n                max={5}\n                isInvalid={minutes === 0 && seconds === 0}\n                ref={minutesDiv}\n                onChange={(value) => {\n                  const minutesInput = minutesDiv.current.children[0];\n                  const secondsInput = secondsDiv.current.children[0];\n                  if (value === 0 && seconds === 0) {\n                    minutesInput.setCustomValidity(\n                      \"Either minutes or seconds must be over 0\"\n                    );\n                    minutesInput.reportValidity();\n                  } else {\n                    minutesInput.setCustomValidity(\"\");\n                    secondsInput.setCustomValidity(\"\");\n                  }\n                  setMinutes(value);\n                }}\n              >\n                <NumberInputField type=\"number\" />\n                <NumberInputStepper>\n                  <NumberIncrementStepper />\n                  <NumberDecrementStepper />\n                </NumberInputStepper>\n              </NumberInput>\n            </FormControl>\n            <FormControl>\n              <FormLabel htmlFor=\"seconds\">Seconds</FormLabel>\n              <NumberInput\n                id=\"seconds\"\n                value={seconds}\n                min={0}\n                max={60}\n                isInvalid={minutes === 0 && seconds === 0}\n                ref={secondsDiv}\n                onChange={(value) => {\n                  const minutesInput = minutesDiv.current.children[0];\n                  const secondsInput = secondsDiv.current.children[0];\n                  if (value === 0 && minutes === 0) {\n                    secondsInput.setCustomValidity(\n                      \"Either minutes or seconds must be over 0\"\n                    );\n                    secondsInput.reportValidity();\n                  } else {\n                    minutesInput.setCustomValidity(\"\");\n                    secondsInput.setCustomValidity(\"\");\n                  }\n                  setSeconds(value);\n                }}\n              >\n                <NumberInputField type=\"number\" />\n                <NumberInputStepper>\n                  <NumberIncrementStepper />\n                  <NumberDecrementStepper />\n                </NumberInputStepper>\n              </NumberInput>\n            </FormControl>\n          </Stack>\n          <Stack isInline justify=\"space-between\">\n            <Button\n              variant=\"outline\"\n              variantColor=\"blue\"\n              rightIcon={FiClock}\n              onClick={() => {\n                setMinutes(1);\n                setSeconds(0);\n              }}\n            >\n              1 Minute\n            </Button>\n            <Button\n              variant=\"outline\"\n              variantColor=\"blue\"\n              rightIcon={FiClock}\n              onClick={() => {\n                setSeconds(30);\n                setMinutes(0);\n              }}\n            >\n              30 seconds\n            </Button>\n            <Button\n              type={round ? undefined : \"submit\"}\n              variant={round ? \"solid\" : \"outline\"}\n              variantColor=\"green\"\n              rightIcon={FiPlay}\n              isDisabled={noNames || lock}\n              onClick={round ? () => setIsOpen(true) : undefined}\n            >\n              Start {round ? \"round\" : \"turn\"}\n            </Button>\n          </Stack>\n          <Clearfix />\n          {lock && (\n            <Text textAlign=\"center\" py={4}>\n              {lock} is currently playing\n            </Text>\n          )}\n        </form>\n      </Page>\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay />\n        <AlertDialogContent>\n          <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n            Start new round\n          </AlertDialogHeader>\n\n          <AlertDialogBody>\n            You are about to start a new round, this means all the names in the\n            previous round have been answered.\n          </AlertDialogBody>\n\n          <AlertDialogFooter>\n            <Button ref={cancelRef} onClick={onClose}>\n              Cancel\n            </Button>\n            <Button\n              variantColor=\"green\"\n              ml={3}\n              onClick={() => startTurn(minutes, seconds)}\n            >\n              Start round\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { IconButton, Text, Flex } from \"@chakra-ui/core\";\nimport { FiPause, FiPlay, FiRepeat, FiEye, FiEyeOff } from \"react-icons/fi\";\n\nexport function pad(number) {\n  const str = number.toString();\n  if (str.length === 1) {\n    return \"0\" + str;\n  } else {\n    return str;\n  }\n}\n\nexport default function Timer({ time, reset, toggle, isPaused, ...props }) {\n  const [hidden, setHidden] = useState(false);\n  return (\n    <Flex\n      rounded=\"md\"\n      borderWidth={1}\n      borderColor=\"black\"\n      px={1}\n      alignItems=\"center\"\n      {...props}\n    >\n      <IconButton\n        size=\"sm\"\n        aria-label=\"Hide timer\"\n        icon={hidden ? FiEye : FiEyeOff}\n        variant=\"ghost\"\n        onClick={() => setHidden(!hidden)}\n      />\n      <Text\n        as=\"span\"\n        fontSize=\"md\"\n        style={{ fontVariantNumeric: \"tabular-nums\" }}\n        opacity={hidden ? 0 : 1}\n        mx={2}\n      >\n        {pad(Math.floor(time / 60))}:{pad(Math.floor(time % 60))}\n      </Text>\n      <IconButton\n        size=\"sm\"\n        aria-label={isPaused ? \"Resume timer\" : \"Pause timer\"}\n        icon={isPaused ? FiPlay : FiPause}\n        variant=\"ghost\"\n        onClick={() => toggle()}\n      />\n      <IconButton\n        size=\"sm\"\n        aria-label=\"Reset timer\"\n        icon={FiRepeat}\n        variant=\"ghost\"\n        onClick={() => reset()}\n      />\n    </Flex>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function useLocalStorageState(name, defaultValue = null) {\n  const [state, setState] = useState(() => {\n    const fromLocal = window.localStorage.getItem(name);\n    if (fromLocal !== null) {\n      try {\n        return JSON.parse(fromLocal);\n      } catch (e) {}\n    }\n    return defaultValue;\n  });\n\n  function setLocalStorageState(newState) {\n    window.localStorage.setItem(name, JSON.stringify(newState));\n    setState(newState);\n  }\n\n  function cleanupLocalStorageState() {\n    window.localStorage.removeItem(name);\n  }\n\n  return [state, setLocalStorageState, cleanupLocalStorageState];\n}\n","import React from \"react\";\nimport {\n  Button,\n  Box,\n  Checkbox,\n  Text,\n  Stack,\n  IconButton,\n  AlertDialog,\n  AlertDialogOverlay,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogBody,\n  AlertDialogFooter,\n  Flex,\n} from \"@chakra-ui/core\";\nimport Page from \"../components/Page\";\nimport { Swipeable, direction } from \"react-deck-swiper\";\nimport { noselect } from \"./Playing.module.css\";\nimport {\n  FiPause,\n  FiCheck,\n  FiDownload,\n  FiUpload,\n  FiVolumeX,\n} from \"react-icons/fi\";\nimport Timer, { pad } from \"../components/Timer\";\nimport useLocalStorageState from \"../useLocalStorageState\";\nimport useTimer from \"../useTimer\";\n\nexport default function Playing({ names: initialNames, endTurn, timer }) {\n  const [names, setNames, cleanupNames] = useLocalStorageState(\n    \"names\",\n    initialNames\n  );\n  const [\n    currentTile,\n    setCurrentTile,\n    cleanupCurrentTile,\n  ] = useLocalStorageState(\"currentTile\", 0);\n  const [passed, setPassed, cleanupPassed] = useLocalStorageState(\n    \"passed\",\n    null\n  );\n  const [isOpen, setIsOpen, cleanupIsOpen] = useLocalStorageState(\n    \"isOpen\",\n    false\n  );\n  const [\n    isCancelable,\n    setIsCancelable,\n    cleanupIsCancelable,\n  ] = useLocalStorageState(\"isCancelable\", true);\n\n  const [\n    time,\n    isPaused,\n    setIsPaused,\n    resetTimer,\n    cleanupTimer,\n    alarmPlaying,\n    stopAlarm,\n  ] = useTimer(timer, () => {\n    setIsCancelable(false);\n    setIsOpen(true);\n  });\n\n  const closeAlert = () => {\n    setIsPaused(false);\n    setIsOpen(false);\n  };\n  function openAlert() {\n    setIsPaused(true);\n    setIsOpen(true);\n  }\n  const cancelRef = React.useRef();\n\n  function end() {\n    cleanupNames();\n    cleanupCurrentTile();\n    cleanupPassed();\n    cleanupIsOpen();\n    cleanupIsCancelable();\n    cleanupTimer();\n    endTurn(names);\n  }\n\n  function updateName(index, value) {\n    const newNames = [...names];\n    newNames[index].answered = !!value;\n    setNames(newNames);\n  }\n\n  function onSwipe(swipeDirection) {\n    let answeredPassed = false;\n    if (swipeDirection === direction.LEFT) {\n      if (passed !== null) {\n        updateName(passed, true);\n        setPassed(null);\n        answeredPassed = true;\n      } else {\n        setPassed(currentTile);\n      }\n    } else if (swipeDirection === direction.RIGHT) {\n      updateName(currentTile, true);\n    }\n    if (!answeredPassed) {\n      if (currentTile + 1 < names.length) {\n        setCurrentTile(currentTile + 1);\n      } else {\n        setCurrentTile(null);\n      }\n    }\n  }\n\n  const outOf =\n    currentTile !== null || passed !== null\n      ? `${(currentTile ?? passed) + 1}/${names.length}`\n      : \"\";\n\n  return (\n    <>\n      <Page heading={`Tin-tin ${outOf}`}>\n        {currentTile !== null || passed !== null ? (\n          <Swipeable\n            onSwipe={onSwipe}\n            wrapperHeight={\"239\"}\n            renderButtons={({ left, right }) => (\n              <Stack\n                isInline\n                flex=\"1\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                spacing={2}\n                p={8}\n              >\n                <IconButton\n                  size=\"lg\"\n                  aria-label={passed === null ? \"Pass\" : \"Answered passed\"}\n                  icon={passed === null ? FiDownload : FiUpload}\n                  variant=\"solid\"\n                  variantColor={passed === null ? \"red\" : \"orange\"}\n                  onClick={left}\n                />\n                {passed !== null && currentTile !== null && (\n                  <Text flexGrow=\"1\">\n                    <strong>Passed:</strong> {names[passed].name}\n                  </Text>\n                )}\n                <IconButton\n                  size=\"lg\"\n                  aria-label={\n                    currentTile !== null ? \"Correct\" : \"Answered passed\"\n                  }\n                  icon={currentTile !== null ? FiCheck : FiUpload}\n                  variantColor={currentTile !== null ? \"green\" : \"orange\"}\n                  onClick={currentTile !== null ? right : left}\n                />\n              </Stack>\n            )}\n          >\n            <Box\n              rounded=\"lg\"\n              borderWidth={1}\n              py=\"6rem\"\n              px={2}\n              textAlign=\"center\"\n            >\n              <Text fontSize=\"3xl\" className={noselect}>\n                {currentTile !== null\n                  ? names[currentTile].name\n                  : `Passed: ${names[passed].name}`}\n              </Text>\n            </Box>\n          </Swipeable>\n        ) : (\n          <Box py=\"6rem\" px={2} textAlign=\"center\">\n            <Text fontSize=\"3xl\" color=\"grey.200\">\n              No more names!\n            </Text>\n          </Box>\n        )}\n        <Flex justifyContent=\"space-between\" mt={10}>\n          <Timer\n            time={time}\n            reset={resetTimer}\n            initialTime={timer}\n            isPaused={isPaused}\n            toggle={() => setIsPaused(!isPaused)}\n          />\n          <Button\n            variant=\"outline\"\n            variantColor=\"red\"\n            rightIcon={FiPause}\n            onClick={openAlert}\n          >\n            End turn\n          </Button>\n        </Flex>\n      </Page>\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={isCancelable && cancelRef}\n        onClose={isCancelable && closeAlert}\n        closeOnOverlayClick={isCancelable}\n        closeOnEsc={isCancelable}\n      >\n        <AlertDialogOverlay />\n        {alarmPlaying ? (\n          <AlertDialogContent>\n            <AlertDialogHeader\n              fontSize=\"lg\"\n              fontWeight=\"bold\"\n              textAlign=\"center\"\n            >\n              Time is up!\n            </AlertDialogHeader>\n            <AlertDialogBody paddingBottom={5}>\n              <Stack isInline justify=\"center\">\n                <Button\n                  onClick={stopAlarm}\n                  flexDirection={\"column\"}\n                  paddingX={8}\n                  paddingY={12}\n                  variantColor=\"red\"\n                >\n                  <FiVolumeX size={30} style={{ marginBottom: \"0.5rem\" }} />\n                  Stop Alarm\n                </Button>\n              </Stack>\n            </AlertDialogBody>\n          </AlertDialogContent>\n        ) : (\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              Double check you did not mis-click anything:\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              {names\n                .slice(0, currentTile !== null ? currentTile + 1 : names.length)\n                .map(({ name, answered }, index) => (\n                  <Checkbox\n                    id={`name-${index}`}\n                    isChecked={answered}\n                    onChange={(event) =>\n                      updateName(index, event.target.checked)\n                    }\n                    isInline\n                    isFullWidth\n                    key={index}\n                    rounded=\"md\"\n                    borderWidth={1}\n                    p={2}\n                    mb={2}\n                  >\n                    {name}\n                  </Checkbox>\n                ))}\n              <Text>\n                You scored\n                {\": \" +\n                  names.reduce(\n                    (total, { answered }) => (total += Number(answered)),\n                    0\n                  )}\n              </Text>\n              {time > 0 && (\n                <Text>\n                  You have {pad(Math.floor(time / 60))}:\n                  {pad(Math.floor(time % 60))} left\n                </Text>\n              )}\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              {isCancelable && (\n                <Button ref={cancelRef} onClick={closeAlert}>\n                  Cancel\n                </Button>\n              )}\n              <Button variantColor=\"green\" onClick={end} ml={3}>\n                Confirm\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        )}\n      </AlertDialog>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport useLocalStorageState from \"./useLocalStorageState\";\n\nexport default function useTimer(start, onTimerEnd) {\n  const [isPaused, setIsPaused] = useState(false);\n  const [time, setTime, cleanupStorage] = useLocalStorageState(\"time\", start);\n  const [last, setLast] = useState(Date.now());\n  const [alarm] = useState(() => {\n    const out = new Audio(`${process.env.PUBLIC_URL}/alarm.mp3`);\n    out.loop = true;\n    return out;\n  });\n  const [alarmPlaying, setAlarmPlaying] = useState(false);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      if (isPaused !== true) {\n        const current = Date.now();\n        const delta = current - last;\n        if (delta >= 1000) {\n          if (time - 1 > 0) {\n            setTime(time - 1);\n          } else {\n            setTime(0);\n            setIsPaused(true);\n            alarm.play();\n            setAlarmPlaying(true);\n            onTimerEnd && onTimerEnd();\n          }\n        } else {\n          setLast(current);\n        }\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  });\n\n  function reset() {\n    setTime(start);\n    setLast(Date.now());\n    alarm.pause();\n    setAlarmPlaying(false);\n  }\n\n  function cleanup() {\n    cleanupStorage();\n    alarm.pause();\n  }\n\n  function stopAlarm() {\n    alarm.pause();\n    setAlarmPlaying(false);\n  }\n\n  return [time, isPaused, setIsPaused, reset, cleanup, alarmPlaying, stopAlarm];\n}\n","import React from \"react\";\nimport {\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n} from \"@chakra-ui/core\";\n\nexport default function Error({ title = \"Something went wrong\", error }) {\n  return (\n    <Alert\n      status=\"error\"\n      variant=\"subtle\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      textAlign=\"center\"\n      height=\"200px\"\n    >\n      <AlertIcon size=\"40px\" mr={0} />\n      <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n        {title}\n      </AlertTitle>\n      <AlertDescription maxWidth=\"sm\">{error.toString()}</AlertDescription>\n    </Alert>\n  );\n}\n","import React from \"react\";\nexport default function useAsyncError() {\n  const [, setError] = React.useState();\n  return React.useCallback(\n    (e) => {\n      setError(() => {\n        throw e;\n      });\n    },\n    [setError]\n  );\n}\n","import firebase from \"./firebase\";\n\nexport async function trackEvent(sessionId, data) {\n  return firebase.database().ref(`sessions/${sessionId}/events`).push({\n    data,\n    timestamp: Date.now(),\n  });\n}\n","import React from \"react\";\n\nimport firebase from \"../firebase\";\nimport { useObject } from \"react-firebase-hooks/database\";\nimport { useParams } from \"react-router-dom\";\nimport useUser, { USERSTATE } from \"../useUser\";\nimport Submitting from \"./Submitting\";\nimport { Spinner, Flex, Text } from \"@chakra-ui/core\";\nimport Waiting from \"./Waiting\";\nimport Playing from \"./Playing\";\nimport Error from \"../components/Error\";\nimport Page from \"../components/Page\";\nimport useAsyncError from \"../useAsyncError\";\nimport useOnlineStatus from \"@rehooks/online-status\";\nimport { trackEvent } from \"../events\";\n\nfunction addNames(session, sessionId, user, updateUser, throwError) {\n  return (playerName, names) => {\n    const previous = session.carbon ? Object.values(session.carbon) : [];\n    firebase\n      .database()\n      .ref(`sessions/${sessionId}/carbon`)\n      .set([...previous, ...names])\n      .then(() => {\n        updateUser({ ...user, state: USERSTATE.WAITING, playerName });\n      })\n      .catch(throwError);\n  };\n}\n\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nfunction startTurn(sessionId, user, updateUser, throwError, round) {\n  return (minutes, seconds) => {\n    // Get the most up to date session, the main session object should be syned automatically.\n    firebase\n      .database()\n      .ref(`sessions/${sessionId}`)\n      .once(\"value\")\n      .then((sessionRef) => {\n        const session = sessionRef.val();\n        if (!session.lock) {\n          firebase\n            .database()\n            .ref(`sessions/${sessionId}/lock`)\n            .set(user.playerName)\n            .then(async () => {\n              const names = session.current\n                ? Object.values(session.current)\n                : Object.values(session.carbon);\n              if (!session.current) {\n                await firebase\n                  .database()\n                  .ref(`sessions/${sessionId}/current`)\n                  .set([...names])\n                  .catch(throwError);\n              }\n              return names;\n            })\n            .then((names) => {\n              updateUser({\n                ...user,\n                names: shuffle(names).map((name) => ({\n                  name,\n                  answered: false,\n                })),\n                state: USERSTATE.PLAYING,\n                timer: minutes * 60 + seconds,\n              });\n            })\n            .then(() => {\n              trackEvent(sessionId, {\n                event: \"start_turn\",\n                current: JSON.stringify(session.current ?? []),\n                minutes,\n                seconds,\n                round,\n              });\n            })\n            .catch(throwError);\n        }\n      });\n  };\n}\n\nfunction endTurn(session, sessionId, user, updateUser, throwError) {\n  return (names) => {\n    const before = [...names];\n    const after = names.filter(({ answered }) => !answered);\n    names = after.map(({ name }) => name);\n    firebase\n      .database()\n      .ref(`sessions/${sessionId}/current`)\n      .set([...names])\n      .then(() =>\n        firebase.database().ref(`sessions/${sessionId}/lock`).set(false)\n      )\n      .then(() => {\n        updateUser({ ...user, names: undefined, state: USERSTATE.WAITING });\n      })\n      .then(() => {\n        trackEvent(sessionId, {\n          event: \"end_turn\",\n          n: before.length - after.length,\n          before: JSON.stringify(before),\n          after: JSON.stringify(after),\n          current: JSON.stringify(session.current ?? []),\n        });\n      })\n      .catch(throwError);\n  };\n}\n\nfunction renderScreen(session, sessionId, user, updateUser, throwError) {\n  switch (user.state) {\n    case USERSTATE.SUBMITTING:\n      return (\n        <Submitting\n          count={session.count}\n          onSubmit={addNames(session, sessionId, user, updateUser, throwError)}\n        />\n      );\n    case USERSTATE.WAITING:\n      return (\n        <Waiting\n          user={user}\n          startTurn={startTurn(\n            sessionId,\n            user,\n            updateUser,\n            throwError,\n            !session.current || Object.values(session.current).length === 0\n          )}\n          round={\n            !session.current || Object.values(session.current).length === 0\n          }\n          noNames={\n            !session.carbon || Object.values(session.carbon).length === 0\n          }\n          timer={user.timer}\n          lock={session.lock}\n        />\n      );\n    case USERSTATE.PLAYING:\n      return (\n        <Playing\n          names={user.names}\n          timer={user.timer}\n          endTurn={endTurn(session, sessionId, user, updateUser, throwError)}\n        />\n      );\n    default:\n      return `Unknown state: ${user.state}`;\n  }\n}\n\nexport default function Session() {\n  const { id: sessionId } = useParams();\n  const throwError = useAsyncError();\n  const [session, sessionLoading, sessionError] = useObject(\n    firebase.database().ref(`sessions/${sessionId}`)\n  );\n  const [user, updateUser] = useUser(sessionId);\n  const sessionExists = session && session.val();\n  const isOnline = useOnlineStatus();\n  return (\n    <>\n      {((sessionLoading && !sessionError) || !isOnline) && (\n        <Flex\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          direction=\"column\"\n          mt={16}\n        >\n          {!isOnline && (\n            <Text mb={4} fontSize=\"lg\">\n              Offline, reconnecting\n            </Text>\n          )}\n          <Spinner size=\"xl\" transform=\"translate(-50%, -50%)\" />\n        </Flex>\n      )}\n      {(sessionError || !sessionExists) && !sessionLoading && isOnline && (\n        <Page>\n          <Error\n            title={sessionError ? undefined : \"Session ID does not exist\"}\n            error={\n              sessionError\n                ? sessionError.toString()\n                : \"Please check you copied it correctly\"\n            }\n          />\n        </Page>\n      )}\n      {!sessionLoading &&\n        !sessionError &&\n        sessionExists &&\n        isOnline &&\n        renderScreen(session.val(), sessionId, user, updateUser, throwError)}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Button,\n  Spinner,\n  Input,\n  InputGroup,\n} from \"@chakra-ui/core\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport useUser from \"./useUser\";\nimport firebase from \"./firebase\";\nimport Page from \"./components/Page\";\nimport { FiPlus, FiLogIn, FiLogOut, FiUserPlus } from \"react-icons/fi\";\nimport Clearfix from \"./components/Clearfix\";\nimport useAsyncError from \"./useAsyncError\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport Error from \"./components/Error\";\nimport TextSeperator from \"./components/TextSeperator\";\n\nexport default function CreateSession() {\n  const [session, setSession] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let [admin, loading, error] = useAuthState(firebase.auth());\n  const [authError, setAuthError] = useState(undefined);\n  const [count, setCount] = useState(4);\n  const [key, setKey] = useState(undefined);\n  const [customID, setCustomID] = useState(\"\");\n  const [user, updateUser] = useUser();\n  const throwError = useAsyncError();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user.sessionId) {\n      setKey(user.sessionId);\n    }\n  }, [user.sessionId]);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    const customPromise =\n      !!customID && customID.length > 0 && customID.length < 20\n        ? firebase\n            .database()\n            .ref(`sessions/${customID}`)\n            .once(\"value\")\n            .then((session) => !session.val())\n        : Promise.resolve(false);\n\n    customPromise.then((useCustom) => {\n      if (useCustom) {\n        firebase\n          .database()\n          .ref(`sessions/${customID}`)\n          .set({\n            count,\n            timestamp: Date.now(),\n          })\n          .then(() => {\n            updateUser({ ...user, sessionId: customID });\n          })\n          .catch(throwError);\n      } else {\n        firebase\n          .database()\n          .ref(\"sessions\")\n          .push({\n            count,\n            timestamp: Date.now(),\n          })\n          .then(({ key: sessionId }) => {\n            updateUser({ ...user, sessionId });\n          })\n          .catch(throwError);\n      }\n    });\n  }\n\n  function signin() {\n    setAuthError(undefined);\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(username, password)\n      .catch(setAuthError);\n  }\n\n  function signout() {\n    firebase.auth().signOut().catch(setAuthError);\n  }\n\n  function renderJoin() {\n    return (\n      <>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            history.push(`/sessions/${encodeURIComponent(session)}`);\n          }}\n        >\n          <FormControl mb={4}>\n            <FormLabel htmlFor=\"session\">Enter a session id:</FormLabel>\n            <InputGroup size=\"md\">\n              <Input\n                type=\"text\"\n                id=\"session\"\n                value={session}\n                onChange={(event) => setSession(event.target.value)}\n                style={{\n                  borderTopRightRadius: 0,\n                  borderBottomRightRadius: 0,\n                  borderRight: 0,\n                }}\n                isRequired\n              />\n            </InputGroup>\n          </FormControl>\n          <Button\n            type=\"submit\"\n            size=\"md\"\n            variantColor=\"green\"\n            rightIcon={FiUserPlus}\n          >\n            Join\n          </Button>\n        </form>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {loading && !error && (\n        <Spinner\n          size=\"xl\"\n          position=\"absolute\"\n          top=\"50%\"\n          left=\"50%\"\n          transform=\"translate(-50%, -50%)\"\n        />\n      )}\n      {!loading && error && (\n        <Page>\n          <Error error={error.toString()} />\n        </Page>\n      )}\n      {!loading &&\n        !error &&\n        admin &&\n        (key ? (\n          <Redirect to={`/sessions/${key}`} />\n        ) : (\n          <Page\n            header={true}\n            heading=\"Create a new session\"\n            subHeading=\"Start a new tin-tin game session with the number of names per player you want. You will be redirected to a shareable url that other players can join from.\"\n          >\n            <form onSubmit={onSubmit}>\n              <FormControl>\n                <FormLabel htmlFor=\"count\">\n                  Number of names a player can select\n                </FormLabel>\n                <NumberInput\n                  id=\"count\"\n                  defaultValue={count}\n                  min={1}\n                  max={10}\n                  onChange={setCount}\n                  mb={4}\n                >\n                  <NumberInputField type=\"number\" />\n                  <NumberInputStepper>\n                    <NumberIncrementStepper />\n                    <NumberDecrementStepper />\n                  </NumberInputStepper>\n                </NumberInput>\n              </FormControl>\n              <FormControl>\n                <FormLabel htmlFor=\"customID\">Custom Session ID</FormLabel>\n                <Input\n                  id=\"customID\"\n                  type=\"text\"\n                  onChange={(event) => setCustomID(event.target.value)}\n                  value={customID}\n                  mb={4}\n                />\n              </FormControl>\n              <Button\n                variant=\"outline\"\n                rightIcon={FiLogOut}\n                float=\"left\"\n                onClick={() => signout()}\n              >\n                Logout\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"solid\"\n                variantColor=\"green\"\n                rightIcon={FiPlus}\n                float=\"right\"\n              >\n                Create new session\n              </Button>\n            </form>\n            <Clearfix />\n            <TextSeperator text=\"or\" marginY={10} />\n            {renderJoin()}\n          </Page>\n        ))}\n      {!admin && !loading && !error && (\n        <Page\n          header={true}\n          subHeading=\"Join a session with a unique session id or login to create a new session (closed beta).\"\n        >\n          {authError && <Error error={authError} />}\n          {renderJoin()}\n          <TextSeperator text=\"or\" marginY={10} />\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n              signin();\n            }}\n          >\n            <FormControl isRequired mb={4}>\n              <FormLabel htmlFor=\"username\">Username</FormLabel>\n              <Input\n                type=\"email\"\n                id=\"username\"\n                value={username}\n                onChange={(event) => setUsername(event.target.value)}\n                mb={2}\n              />\n            </FormControl>\n            <FormControl isRequired mb={4}>\n              <FormLabel htmlFor=\"password\">Password</FormLabel>\n              <Input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(event) => setPassword(event.target.value)}\n                mb={2}\n              />\n            </FormControl>\n            <Button\n              type=\"submit\"\n              variant=\"solid\"\n              variantColor=\"green\"\n              rightIcon={FiLogIn}\n            >\n              Sign in\n            </Button>\n          </form>\n        </Page>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport Error from \"./Error\";\nimport Page from \"./Page\";\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error: error.toString() };\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <Page>\n          <Error error={this.state.error} />\n        </Page>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport { ThemeProvider, CSSReset, Flex, Text } from \"@chakra-ui/core\";\nimport { customTheme } from \"./theme\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Session from \"./Session\";\nimport CreateSession from \"./CreateSession\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport {\n  Alert,\n  AlertIcon,\n  AlertDescription,\n  IconButton,\n} from \"@chakra-ui/core\";\nimport { FiRefreshCw } from \"react-icons/fi\";\n\nfunction App({ isUpdateAvailable, updateAssets }) {\n  return (\n    <Router>\n      <ThemeProvider theme={customTheme}>\n        <Text position=\"absolute\" top=\"0\" right=\"0\" p={2} fontSize=\"xs\">\n          {process.env.REACT_APP_VERSION}\n        </Text>\n        <CSSReset />\n        <ErrorBoundary>\n          <Switch>\n            <Route path=\"/sessions/:id\" component={Session} />\n            <Route path=\"/\" component={CreateSession} />\n          </Switch>\n          {isUpdateAvailable && (\n            <Flex\n              position=\"fixed\"\n              bottom={2}\n              left=\"0\"\n              right=\"0\"\n              justifyContent=\"center\"\n            >\n              <Alert status=\"info\" rounded=\"md\">\n                <AlertIcon />\n                <AlertDescription mr={2}>\n                  A new version of Tin-tin is available! Click to update.\n                </AlertDescription>\n                <IconButton\n                  icon={FiRefreshCw}\n                  onClick={updateAssets}\n                  size=\"sm\"\n                  variant=\"ghost\"\n                />\n              </Alert>\n            </Flex>\n          )}\n        </ErrorBoundary>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      if (registration.waiting) {\n        if (config && config.onWaiting) {\n          config.onWaiting(registration.waiting);\n        }\n      }\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {\n  useEffect,\n  useState,\n  useContext,\n  useMemo,\n  createContext,\n} from \"react\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst ServiceWorkerContext = createContext();\n\n// https://medium.com/@FezVrasta/service-worker-updates-and-error-handling-with-react-1a3730800e6a\nexport const ServiceWorkerProvider = ({ children }) => {\n  const [waitingServiceWorker, setWaitingServiceWorker] = useState(null);\n  const [isUpdateAvailable, setUpdateAvailable] = useState(false);\n\n  useEffect(() => {\n    serviceWorker.register({\n      onUpdate: (registration) => {\n        setWaitingServiceWorker(registration.waiting);\n        setUpdateAvailable(true);\n      },\n      onWaiting: (waiting) => {\n        setWaitingServiceWorker(waiting);\n        setUpdateAvailable(true);\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    if (waitingServiceWorker) {\n      // We setup an event listener to automatically reload the page\n      // after the Service Worker has been updated, this will trigger\n      // on all the open tabs of our application, so that we don't leave\n      // any tab in an incosistent state\n      waitingServiceWorker.addEventListener(\"statechange\", (event) => {\n        if (event.target.state === \"activated\") {\n          window.location.reload();\n        }\n      });\n    }\n  }, [waitingServiceWorker]);\n\n  const value = useMemo(\n    () => ({\n      isUpdateAvailable,\n      updateAssets: () => {\n        if (waitingServiceWorker) {\n          // We send the SKIP_WAITING message to tell the Service Worker\n          // to update its cache and flush the old one\n          waitingServiceWorker.postMessage({ type: \"SKIP_WAITING\" });\n        }\n      },\n    }),\n    [isUpdateAvailable, waitingServiceWorker]\n  );\n\n  return (\n    <ServiceWorkerContext.Provider value={value}>\n      {children}\n    </ServiceWorkerContext.Provider>\n  );\n};\n\n// With this React Hook we'll be able to access `isUpdateAvailable` and `updateAssets`\nexport const useServiceWorker = () => {\n  return useContext(ServiceWorkerContext);\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { useServiceWorker, ServiceWorkerProvider } from \"./useServiceWorker\";\n\n// https://medium.com/@FezVrasta/service-worker-updates-and-error-handling-with-react-1a3730800e6a\nwindow.addEventListener(\"error\", async (err) => {\n  // Since we are handling the error here, we must make\n  // sure we log it into the console nonetheless, otherwise\n  // it will be very difficult to understand why your app\n  // is crashing.\n  console.error(err);\n\n  // If no service worker is available, our work ends here\n  // because we don't need to unregister the service worker\n  // to make sure the user is able to get a newer version of\n  // our application.\n  if (!navigator.serviceWorker) {\n    return;\n  }\n\n  // On development builds of React, error boundaries don't stop\n  // errors from bubbling up to the window error handler, so we don't\n  // want to execute this code here because it would be unreliable\n  // https://github.com/facebook/react/issues/12897#issuecomment-410036991\n  if (process.env.NODE_ENV !== \"development\") {\n    // We want to run this code only if we detect a new service worker\n    // is getting installed or is installed but waiting to be activated.\n    // This will make sure we don't run this code on a sane environment\n    // that is crashing for an error not related to stale app cache.\n    const registration = await navigator.serviceWorker.ready;\n    if (registration.installing || registration.waiting) {\n      navigator.serviceWorker.ready.then(async (registration) => {\n        await registration.unregister();\n        // Once the service worker is unregistered, we can reload\n        // the page to let the browser download a fresh copy of our app\n        window.location.reload();\n      });\n    }\n  }\n});\n\nfunction Root() {\n  const { isUpdateAvailable, updateAssets } = useServiceWorker();\n\n  return (\n    <>\n      <App isUpdateAvailable={isUpdateAvailable} updateAssets={updateAssets} />\n    </>\n  );\n}\n\nReactDOM.render(\n  <ServiceWorkerProvider>\n    <Root />\n  </ServiceWorkerProvider>,\n  document.getElementById(\"root\")\n);\n","const firebase = require(\"firebase/app\");\nrequire(\"firebase/database\");\nrequire(\"firebase/auth\");\n\nconst config = {\n  apiKey: \"AIzaSyDb3dX8j1yMlbNFGHI9QqRpSBjJ0WsWO4I\",\n  authDomain: \"tin-tin-5e0d8.firebaseapp.com\",\n  databaseURL: \"https://tin-tin-5e0d8.firebaseio.com\",\n  projectId: \"tin-tin-5e0d8\",\n  storageBucket: \"tin-tin-5e0d8.appspot.com\",\n  messagingSenderId: \"196227528129\",\n  appId: \"1:196227528129:web:51ad97056e103f78c2ab40\",\n};\nfirebase.initializeApp(config);\nmodule.exports = firebase;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__329Ps\",\"footer\":\"Page_footer__3NR6V\"};"],"sourceRoot":""}